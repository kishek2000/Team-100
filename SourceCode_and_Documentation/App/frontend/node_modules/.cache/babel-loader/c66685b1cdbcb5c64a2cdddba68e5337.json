{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/App/frontend/src/components/MediaGenreList.js\";\nimport React from 'react';\nimport { GenreSet } from './GenreSet'; // This is our genre lists component. On input it will give either the watch or the listen format (listen format still to do).\n\nexport function MediaGenreList(props) {\n  var classStart = 'watch';\n\n  if (props.media === 'LISTEN') {\n    classStart = 'listen';\n  }\n\n  const genreLabels = props.genres;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"category-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"category-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Genres\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"category-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GenreSet, {\n    setClass: \"genre-set\",\n    imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/5l10EjdgPxu8Gbl5Ww6SWkVQH6T.jpg\",\n    class: `${classStart}-genre-template-first`,\n    genreLabel: genreLabels[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GenreSet, {\n    setClass: \"genre-set-middle\",\n    imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg\",\n    class: `${classStart}-genre-template-middle`,\n    genreLabel: genreLabels[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GenreSet, {\n    setClass: \"genre-set-middle\",\n    imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/y55oBgf6bVMI7sFNXwJDrSIxPQt.jpg\",\n    class: `${classStart}-genre-template-middle`,\n    genreLabel: genreLabels[2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GenreSet, {\n    setClass: \"genre-set-last\",\n    imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg\",\n    class: `${classStart}-genre-template-last`,\n    genreLabel: genreLabels[3],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/App/frontend/src/components/MediaGenreList.js"],"names":["React","GenreSet","MediaGenreList","props","classStart","media","genreLabels","genres"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CAEA;;AACA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AACpC,MAAIC,UAAU,GAAG,OAAjB;;AACA,MAAID,KAAK,CAACE,KAAN,KAAgB,QAApB,EAA8B;AAC5BD,IAAAA,UAAU,GAAG,QAAb;AACD;;AACD,QAAME,WAAW,GAAGH,KAAK,CAACI,MAA1B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAC,WADX;AAEE,IAAA,WAAW,EAAC,iFAFd;AAGE,IAAA,KAAK,EAAG,GAAEH,UAAW,uBAHvB;AAIE,IAAA,UAAU,EAAEE,WAAW,CAAC,CAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAC,kBADX;AAEE,IAAA,WAAW,EAAC,iFAFd;AAGE,IAAA,KAAK,EAAG,GAAEF,UAAW,wBAHvB;AAIE,IAAA,UAAU,EAAEE,WAAW,CAAC,CAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAaE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAC,kBADX;AAEE,IAAA,WAAW,EAAC,iFAFd;AAGE,IAAA,KAAK,EAAG,GAAEF,UAAW,wBAHvB;AAIE,IAAA,UAAU,EAAEE,WAAW,CAAC,CAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAmBE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAC,gBADX;AAEE,IAAA,WAAW,EAAC,iFAFd;AAGE,IAAA,KAAK,EAAG,GAAEF,UAAW,sBAHvB;AAIE,IAAA,UAAU,EAAEE,WAAW,CAAC,CAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CAFF,CADF;AA+BD","sourcesContent":["import React from 'react'\nimport { GenreSet } from './GenreSet'\n\n// This is our genre lists component. On input it will give either the watch or the listen format (listen format still to do).\nexport function MediaGenreList(props) {\n  var classStart = 'watch'\n  if (props.media === 'LISTEN') {\n    classStart = 'listen'\n  }\n  const genreLabels = props.genres\n  return (\n    <div className=\"category-list\">\n      <p className=\"category-title\">Genres</p>\n      <div className=\"category-media\">\n        <GenreSet\n          setClass=\"genre-set\"\n          imageSource=\"https://image.tmdb.org/t/p/w600_and_h900_bestv2/5l10EjdgPxu8Gbl5Ww6SWkVQH6T.jpg\"\n          class={`${classStart}-genre-template-first`}\n          genreLabel={genreLabels[0]}\n        />\n        <GenreSet\n          setClass=\"genre-set-middle\"\n          imageSource=\"https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg\"\n          class={`${classStart}-genre-template-middle`}\n          genreLabel={genreLabels[1]}\n        />\n        <GenreSet\n          setClass=\"genre-set-middle\"\n          imageSource=\"https://image.tmdb.org/t/p/w600_and_h900_bestv2/y55oBgf6bVMI7sFNXwJDrSIxPQt.jpg\"\n          class={`${classStart}-genre-template-middle`}\n          genreLabel={genreLabels[2]}\n        />\n        <GenreSet\n          setClass=\"genre-set-last\"\n          imageSource=\"https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg\"\n          class={`${classStart}-genre-template-last`}\n          genreLabel={genreLabels[3]}\n        />\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}