{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/App/frontend/src/MediaGenreList.js\";\nimport React from 'react';\nimport { GenreSet } from './GenreSet'; // This is our genre lists component. On input it will give either the watch or the listen format (listen format still to do).\n\nexport function MediaGenreList(props) {\n  if (props.media === 'TV') {\n    const genreLabels = props.genres;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"category-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, \"Genres\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GenreSet, {\n      setClass: \"genre-set\",\n      imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/5l10EjdgPxu8Gbl5Ww6SWkVQH6T.jpg\",\n      class: \"media-genre-template-first\",\n      genreLabel: genreLabels[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GenreSet, {\n      setClass: \"genre-set-middle\",\n      imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg\",\n      class: \"media-genre-template-middle\",\n      genreLabel: genreLabels[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GenreSet, {\n      setClass: \"genre-set-middle\",\n      imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/y55oBgf6bVMI7sFNXwJDrSIxPQt.jpg\",\n      class: \"media-genre-template-middle\",\n      genreLabel: genreLabels[2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GenreSet, {\n      setClass: \"genre-set-last\",\n      imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg\",\n      class: \"media-genre-template-last\",\n      genreLabel: genreLabels[3],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    })));\n  }\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/App/frontend/src/MediaGenreList.js"],"names":["React","GenreSet","MediaGenreList","props","media","genreLabels","genres"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CAEA;;AACA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AACpC,MAAIA,KAAK,CAACC,KAAN,KAAgB,IAApB,EAA0B;AACxB,UAAMC,WAAW,GAAGF,KAAK,CAACG,MAA1B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAC,WADX;AAEE,MAAA,WAAW,EAAC,iFAFd;AAGE,MAAA,KAAK,EAAC,4BAHR;AAIE,MAAA,UAAU,EAAED,WAAW,CAAC,CAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAC,kBADX;AAEE,MAAA,WAAW,EAAC,iFAFd;AAGE,MAAA,KAAK,EAAC,6BAHR;AAIE,MAAA,UAAU,EAAEA,WAAW,CAAC,CAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAaE,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAC,kBADX;AAEE,MAAA,WAAW,EAAC,iFAFd;AAGE,MAAA,KAAK,EAAC,6BAHR;AAIE,MAAA,UAAU,EAAEA,WAAW,CAAC,CAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,eAmBE,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAC,gBADX;AAEE,MAAA,WAAW,EAAC,iFAFd;AAGE,MAAA,KAAK,EAAC,2BAHR;AAIE,MAAA,UAAU,EAAEA,WAAW,CAAC,CAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,CAFF,CADF;AA+BD;AACF","sourcesContent":["import React from 'react'\nimport { GenreSet } from './GenreSet'\n\n// This is our genre lists component. On input it will give either the watch or the listen format (listen format still to do).\nexport function MediaGenreList(props) {\n  if (props.media === 'TV') {\n    const genreLabels = props.genres\n    return (\n      <div className=\"category-list\">\n        <p className=\"category-title\">Genres</p>\n        <div className=\"category-media\">\n          <GenreSet\n            setClass=\"genre-set\"\n            imageSource=\"https://image.tmdb.org/t/p/w600_and_h900_bestv2/5l10EjdgPxu8Gbl5Ww6SWkVQH6T.jpg\"\n            class=\"media-genre-template-first\"\n            genreLabel={genreLabels[0]}\n          />\n          <GenreSet\n            setClass=\"genre-set-middle\"\n            imageSource=\"https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg\"\n            class=\"media-genre-template-middle\"\n            genreLabel={genreLabels[1]}\n          />\n          <GenreSet\n            setClass=\"genre-set-middle\"\n            imageSource=\"https://image.tmdb.org/t/p/w600_and_h900_bestv2/y55oBgf6bVMI7sFNXwJDrSIxPQt.jpg\"\n            class=\"media-genre-template-middle\"\n            genreLabel={genreLabels[2]}\n          />\n          <GenreSet\n            setClass=\"genre-set-last\"\n            imageSource=\"https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg\"\n            class=\"media-genre-template-last\"\n            genreLabel={genreLabels[3]}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}