{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liam\\\\Documents\\\\GitHub\\\\Team-100\\\\SourceCode_and_Documentation\\\\App\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css'; //////////////////////////////////////////////////////////////////////////////\n//////////////////////////////// TMP GLOBALS /////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////\n// Temporary global variable for currently selected item, initialised as WATCH:\n\nvar currentMediaSelected = \"WATCH\"; //////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////// MAIN APP ////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"myLounge-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"myLounge\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"myLounge-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Listen. Watch. Relax.\"), /*#__PURE__*/React.createElement(SearchBar, {\n    name: \"searchbar-menu\",\n    inputname: \"searchinput-menu\",\n    imagename: \"searchbutton-menu\",\n    placeholder: \"Search for Movie, TV Show, Podcast or Music by name...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"body\", {\n    className: \"App-media-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"selection-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"I want to\"), /*#__PURE__*/React.createElement(MediaSelector, {\n    currentValue: currentMediaSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MediaSelector, {\n    currentValue: \"LISTEN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(SearchBar, {\n    name: \"searchbar\",\n    inputname: \"searchinput\",\n    imagename: \"searchbutton\",\n    placeholder: \"Search for Movie or TV Show by name...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(MediaCategoryList, {\n    category: \"Trending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n    category: \"Top Rated Movies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n    category: \"Top Rated TV Shows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n    category: \"Now Airing TV Shows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MediaGenreList, {\n    media: \"TV\",\n    genreOne: \"Romance\",\n    genreTwo: \"Drama\",\n    genreThree: \"Comedy\",\n    genreFour: \"Horror\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App; //////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////// COMPONENTS ///////////////////////////////\n//////////////////////////////////////////////////////////////////////////////\n// This is the search bar component. Provide it specified class names for one\n// of the two main styles. Either menu, or normal.\n\nfunction SearchBar(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://img.icons8.com/android/24/000000/search.png\",\n    className: props.imagename,\n    alt: \"searchIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: props.inputname,\n    type: \"text\",\n    placeholder: props.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }));\n} // This now is our media selection component. This only varies in its list, which you can provide.\n\n\nfunction MediaSelector(props) {\n  return /*#__PURE__*/React.createElement(\"input\", {\n    className: \"media-button\",\n    type: \"button\",\n    value: props.currentValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  });\n} // This is our category lists component. For now we just vary this with the labelling.\n\n\nfunction MediaCategoryList(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"category-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"category-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, props.category), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"category-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/5l10EjdgPxu8Gbl5Ww6SWkVQH6T.jpg\",\n    className: \"media-template-first\",\n    alt: \"media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg\",\n    className: \"media-template-middle\",\n    alt: \"media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/y55oBgf6bVMI7sFNXwJDrSIxPQt.jpg\",\n    className: \"media-template-middle\",\n    alt: \"media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg\",\n    className: \"media-template-last\",\n    alt: \"media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })));\n} // This is our genre lists component. On input it will give either the watch or the listen format (listen format still to do).\n\n\nfunction MediaGenreList(props) {\n  if (props.media === \"TV\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"category-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"Genre\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GenreSet, {\n      setClass: \"genre-set\",\n      imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/5l10EjdgPxu8Gbl5Ww6SWkVQH6T.jpg\",\n      class: \"media-genre-template-first\",\n      genreLabel: \"Romance\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GenreSet, {\n      setClass: \"genre-set-middle\",\n      imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg\",\n      class: \"media-genre-template-middle\",\n      genreLabel: \"Drama\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GenreSet, {\n      setClass: \"genre-set-middle\",\n      imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/y55oBgf6bVMI7sFNXwJDrSIxPQt.jpg\",\n      class: \"media-genre-template-middle\",\n      genreLabel: \"Comedy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GenreSet, {\n      setClass: \"genre-set-last\",\n      imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg\",\n      class: \"media-genre-template-last\",\n      genreLabel: \"Horror\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    })));\n  }\n} // This function is a helper for MediaGenreList and creates a genreset given an image source, class name and genre label\n\n\nfunction GenreSet(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.setClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.imageSource,\n    className: props.class,\n    alt: \"media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"genre-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, props.genreLabel));\n}","map":{"version":3,"sources":["C:/Users/Liam/Documents/GitHub/Team-100/SourceCode_and_Documentation/App/frontend/src/App.js"],"names":["React","currentMediaSelected","App","SearchBar","props","name","imagename","inputname","placeholder","MediaSelector","currentValue","MediaCategoryList","category","MediaGenreList","media","GenreSet","setClass","imageSource","class","genreLabel"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////// TMP GLOBALS /////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\n// Temporary global variable for currently selected item, initialised as WATCH:\r\nvar currentMediaSelected = \"WATCH\";\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////// MAIN APP ////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <p className=\"myLounge-heading\">\r\n          myLounge\r\n        </p>\r\n        <p className=\"myLounge-subtitle\">\r\n          Listen. Watch. Relax.\r\n        </p>\r\n        <SearchBar name=\"searchbar-menu\" inputname=\"searchinput-menu\" imagename=\"searchbutton-menu\" placeholder=\"Search for Movie, TV Show, Podcast or Music by name...\"/>\r\n      </header>\r\n      <body className=\"App-media-options\">\r\n\r\n        <div className=\"filters-header\">\r\n          <div className=\"media-selection\">\r\n            <p className=\"selection-label\">I want to</p>\r\n            <MediaSelector currentValue={currentMediaSelected}/>\r\n            <MediaSelector currentValue=\"LISTEN\" />\r\n          </div>\r\n          <SearchBar name=\"searchbar\" inputname=\"searchinput\" imagename=\"searchbutton\" placeholder=\"Search for Movie or TV Show by name...\"/>\r\n        </div>\r\n\r\n        <MediaCategoryList category=\"Trending\"/>\r\n        <MediaCategoryList category=\"Top Rated Movies\"/>\r\n        <MediaCategoryList category=\"Top Rated TV Shows\"/>\r\n        <MediaCategoryList category=\"Now Airing TV Shows\"/>\r\n        <MediaGenreList media=\"TV\" genreOne=\"Romance\" genreTwo=\"Drama\" genreThree=\"Comedy\" genreFour=\"Horror\"/>\r\n      </body>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n/////////////////////////////////// COMPONENTS ///////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\n// This is the search bar component. Provide it specified class names for one\r\n// of the two main styles. Either menu, or normal.\r\nfunction SearchBar (props) {\r\n  return (\r\n      <div className = {props.name}>\r\n          <img src=\"https://img.icons8.com/android/24/000000/search.png\" className={props.imagename} alt=\"searchIcon\"></img>\r\n          <input className={props.inputname} type=\"text\" placeholder={props.placeholder}></input>\r\n      </div>\r\n  );\r\n}\r\n\r\n// This now is our media selection component. This only varies in its list, which you can provide.\r\nfunction MediaSelector (props) {\r\n    return (\r\n      <input className=\"media-button\" type=\"button\" value={props.currentValue}></input>\r\n    )\r\n  }\r\n\r\n// This is our category lists component. For now we just vary this with the labelling.\r\nfunction MediaCategoryList (props) {\r\n  return (\r\n    <div className=\"category-list\">\r\n      <p className=\"category-title\">{props.category}</p>\r\n      <div className=\"category-media\" >\r\n        {/* <img src=\"https://img.icons8.com/ios/64/000000/circled-chevron-right.png\" className=\"prev-button\" alt=\"prev\"/> */}\r\n        <img src='https://image.tmdb.org/t/p/w600_and_h900_bestv2/5l10EjdgPxu8Gbl5Ww6SWkVQH6T.jpg' className=\"media-template-first\" alt=\"media\"/>\r\n        <img src='https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg' className=\"media-template-middle\" alt=\"media\"/>\r\n        <img src='https://image.tmdb.org/t/p/w600_and_h900_bestv2/y55oBgf6bVMI7sFNXwJDrSIxPQt.jpg' className=\"media-template-middle\" alt=\"media\"/>\r\n        <img src='https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg' className=\"media-template-last\" alt=\"media\"/>\r\n        {/* <img src=\"https://img.icons8.com/ios/64/000000/circled-chevron-right.png\" className=\"next-button\" alt=\"next\"/> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// This is our genre lists component. On input it will give either the watch or the listen format (listen format still to do).\r\nfunction MediaGenreList (props) {\r\n  if (props.media === \"TV\") {\r\n    return (\r\n      <div className=\"category-list\">\r\n        <p className=\"category-title\">Genre</p>\r\n        <div className=\"category-media\" >\r\n          {/* <img src=\"https://img.icons8.com/ios/64/000000/circled-chevron-right.png\" className=\"prev-button\" alt=\"prev\"/> */}\r\n          <GenreSet setClass='genre-set' imageSource='https://image.tmdb.org/t/p/w600_and_h900_bestv2/5l10EjdgPxu8Gbl5Ww6SWkVQH6T.jpg' class=\"media-genre-template-first\" genreLabel=\"Romance\"/>\r\n          <GenreSet setClass='genre-set-middle' imageSource='https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg' class=\"media-genre-template-middle\" genreLabel=\"Drama\"/>\r\n          <GenreSet setClass='genre-set-middle' imageSource='https://image.tmdb.org/t/p/w600_and_h900_bestv2/y55oBgf6bVMI7sFNXwJDrSIxPQt.jpg' class=\"media-genre-template-middle\" genreLabel=\"Comedy\"/>\r\n          <GenreSet setClass='genre-set-last' imageSource='https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg' class=\"media-genre-template-last\" genreLabel=\"Horror\"/>\r\n\r\n          {/* <img src=\"https://img.icons8.com/ios/64/000000/circled-chevron-right.png\" className=\"next-button\" alt=\"next\"/> */}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// This function is a helper for MediaGenreList and creates a genreset given an image source, class name and genre label\r\nfunction GenreSet (props) {\r\n  return (\r\n    <div className={props.setClass}>\r\n      <img src={props.imageSource} className={props.class} alt=\"media\"/>\r\n      <div className=\"genre-label\">{props.genreLabel}</div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}