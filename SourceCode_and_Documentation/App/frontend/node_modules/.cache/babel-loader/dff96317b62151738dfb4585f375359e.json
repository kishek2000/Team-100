{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/App/frontend/src/MediaGenreList.js\";\nimport React from 'react';\nimport { GenreSet } from \"./GenreSet\"; // This is our genre lists component. On input it will give either the watch or the listen format (listen format still to do).\n\nexport function MediaGenreList(props) {\n  if (props.media === \"TV\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"category-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }\n    }, \"Genre\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GenreSet, {\n      setClass: \"genre-set\",\n      imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/5l10EjdgPxu8Gbl5Ww6SWkVQH6T.jpg\",\n      class: \"media-genre-template-first\",\n      genreLabel: \"Romance\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(GenreSet, {\n      setClass: \"genre-set-middle\",\n      imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg\",\n      class: \"media-genre-template-middle\",\n      genreLabel: \"Drama\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(GenreSet, {\n      setClass: \"genre-set-middle\",\n      imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/y55oBgf6bVMI7sFNXwJDrSIxPQt.jpg\",\n      class: \"media-genre-template-middle\",\n      genreLabel: \"Comedy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(GenreSet, {\n      setClass: \"genre-set-last\",\n      imageSource: \"https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg\",\n      class: \"media-genre-template-last\",\n      genreLabel: \"Horror\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    })));\n  }\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/App/frontend/src/MediaGenreList.js"],"names":["React","GenreSet","MediaGenreList","props","media"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CACA;;AACA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AACpC,MAAIA,KAAK,CAACC,KAAN,KAAgB,IAApB,EAA0B;AACxB,wBAAQ;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACN;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADM,eAEN;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAC,WAAnB;AAA+B,MAAA,WAAW,EAAC,iFAA3C;AAA6H,MAAA,KAAK,EAAC,4BAAnI;AAAgK,MAAA,UAAU,EAAC,SAA3K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAC,kBAAnB;AAAsC,MAAA,WAAW,EAAC,iFAAlD;AAAoI,MAAA,KAAK,EAAC,6BAA1I;AAAwK,MAAA,UAAU,EAAC,OAAnL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAC,kBAAnB;AAAsC,MAAA,WAAW,EAAC,iFAAlD;AAAoI,MAAA,KAAK,EAAC,6BAA1I;AAAwK,MAAA,UAAU,EAAC,QAAnL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAC,gBAAnB;AAAoC,MAAA,WAAW,EAAC,iFAAhD;AAAkI,MAAA,KAAK,EAAC,2BAAxI;AAAoK,MAAA,UAAU,EAAC,QAA/K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAFM,CAAR;AAYD;AACF","sourcesContent":["import React from 'react';\nimport { GenreSet } from \"./GenreSet\";\n// This is our genre lists component. On input it will give either the watch or the listen format (listen format still to do).\nexport function MediaGenreList(props) {\n  if (props.media === \"TV\") {\n    return (<div className=\"category-list\">\n      <p className=\"category-title\">Genre</p>\n      <div className=\"category-media\">\n\n        <GenreSet setClass='genre-set' imageSource='https://image.tmdb.org/t/p/w600_and_h900_bestv2/5l10EjdgPxu8Gbl5Ww6SWkVQH6T.jpg' class=\"media-genre-template-first\" genreLabel=\"Romance\" />\n        <GenreSet setClass='genre-set-middle' imageSource='https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg' class=\"media-genre-template-middle\" genreLabel=\"Drama\" />\n        <GenreSet setClass='genre-set-middle' imageSource='https://image.tmdb.org/t/p/w600_and_h900_bestv2/y55oBgf6bVMI7sFNXwJDrSIxPQt.jpg' class=\"media-genre-template-middle\" genreLabel=\"Comedy\" />\n        <GenreSet setClass='genre-set-last' imageSource='https://image.tmdb.org/t/p/w600_and_h900_bestv2/nMhv6jG5dtLdW7rgguYWvpbk0YN.jpg' class=\"media-genre-template-last\" genreLabel=\"Horror\" />\n\n\n      </div>\n    </div>);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}