{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/ListenOverlay.js\";\nimport React from \"react\";\nexport function ListenOverlayMeta({\n  releaseDate,\n  typeLabel,\n  totalTracks\n}) {\n  if (totalTracks === 1) {\n    typeLabel = \"Single\";\n    totalTracks = null;\n  } else if (typeLabel !== \"album\") {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n  } else {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n    totalTracks = `${totalTracks} Tracks`;\n  }\n\n  return [releaseDate, typeLabel, totalTracks].filter(item => !!item).join(\" | \");\n}\nexport function ListenOverlay({\n  media_data,\n  setOpenOverlayID,\n  setOverlayData\n}) {\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-poster-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: media_data[\"imgURL\"],\n    className: \"overlay-poster-music\",\n    alt: \"media-poster\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-information-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, media_data[\"listen_name\"]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-text\",\n    onClick: () => {\n      setOpenOverlayID(-1);\n      setOverlayData({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, media_data[\"type\"] === \"album\" || media_data[\"type\"] === \"single\" ? media_data[\"artist_name\"] : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-meta-listen-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListenOverlayMeta, {\n    releaseDate: media_data[\"release_date\"],\n    typeLabel: media_data[\"type\"],\n    totalTracks: media_data[\"total_tracks\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), media_data[\"type\"] === \"podcast\" || media_data[\"type\"] === \"playlist\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Description\"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-listen-description-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, media_data[\"description\"])) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, media_data[\"type\"] === \"podcast\" ? \"Play Latest Episode\" : \"Preview Now\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-viewing-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spotify-listen\",\n    \"min-width\": media_data[\"youtube\"] !== \" \" ? \"57%\" : \"97%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-listen-options-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Spotify:\"), /*#__PURE__*/React.createElement(\"iframe\", {\n    src: media_data[\"listen_link\"].slice(0, 25) + \"embed/\" + media_data[\"listen_link\"].slice(25),\n    className: \"spotify-play\",\n    title: \"play\",\n    frameborder: \"0\",\n    allowtransparency: \"true\",\n    allow: \"encrypted-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })), media_data[\"youtube\"] !== \" \" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listen-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-listen-options-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Youtube:\"), /*#__PURE__*/React.createElement(\"iframe\", {\n    title: \"music-video\",\n    src: media_data[\"youtube\"],\n    allowfullscreen: \"allowfullscreen\",\n    className: \"overlay-music-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/ListenOverlay.js"],"names":["React","ListenOverlayMeta","releaseDate","typeLabel","totalTracks","toUpperCase","slice","filter","item","join","ListenOverlay","media_data","setOpenOverlayID","setOverlayData"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nexport function ListenOverlayMeta({ releaseDate, typeLabel, totalTracks }) {\n  if (totalTracks === 1) {\n    typeLabel = \"Single\";\n    totalTracks = null;\n  } else if (typeLabel !== \"album\") {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n  } else {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n    totalTracks = `${totalTracks} Tracks`;\n  }\n  return [releaseDate, typeLabel, totalTracks]\n    .filter((item) => !!item)\n    .join(\" | \");\n}\n\nexport function ListenOverlay({\n  media_data,\n  setOpenOverlayID,\n  setOverlayData,\n}) {\n  return (\n    <section className=\"overlay\">\n      <div className=\"overlay-poster-wrapper\">\n        <img\n          src={media_data[\"imgURL\"]}\n          className=\"overlay-poster-music\"\n          alt=\"media-poster\"\n        />\n      </div>\n      <div className=\"overlay-information\">\n        <div className=\"overlay-information-header\">\n          <div className=\"overlay-title\">{media_data[\"listen_name\"]}</div>\n          <div\n            className=\"close-text\"\n            onClick={() => {\n              setOpenOverlayID(-1);\n              setOverlayData({});\n            }}\n          >\n            X\n          </div>\n        </div>\n\n        <div className=\"overlay-subtitle\">\n          {media_data[\"type\"] === \"album\" || media_data[\"type\"] === \"single\"\n            ? media_data[\"artist_name\"]\n            : \"\"}\n        </div>\n        <div className=\"overlay-meta-listen-text\">\n          <ListenOverlayMeta\n            releaseDate={media_data[\"release_date\"]}\n            typeLabel={media_data[\"type\"]}\n            totalTracks={media_data[\"total_tracks\"]}\n          />\n        </div>\n        {media_data[\"type\"] === \"podcast\" ||\n        media_data[\"type\"] === \"playlist\" ? (\n          <div className=\"overlay-description\">\n            {\" \"}\n            <div className=\"overlay-subtitle\">Description</div>{\" \"}\n            <div className=\"overlay-listen-description-text\">\n              {media_data[\"description\"]}\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n        <div className=\"overlay-subtitle\">\n          {media_data[\"type\"] === \"podcast\"\n            ? \"Play Latest Episode\"\n            : \"Preview Now\"}\n        </div>\n        <div className=\"overlay-viewing-row\">\n          <div\n            className=\"spotify-listen\"\n            min-width={media_data[\"youtube\"] !== \" \" ? \"57%\" : \"97%\"}\n          >\n            <div className=\"overlay-listen-options-text\">Spotify:</div>\n            <iframe\n              src={\n                media_data[\"listen_link\"].slice(0, 25) +\n                \"embed/\" +\n                media_data[\"listen_link\"].slice(25)\n              }\n              className=\"spotify-play\"\n              title=\"play\"\n              frameborder=\"0\"\n              allowtransparency=\"true\"\n              allow=\"encrypted-media\"\n            ></iframe>\n          </div>\n          {media_data[\"youtube\"] !== \" \" ? (\n            <div className=\"listen-video\">\n              <div className=\"overlay-listen-options-text\">Youtube:</div>\n              <iframe\n                title=\"music-video\"\n                src={media_data[\"youtube\"]}\n                allowfullscreen=\"allowfullscreen\"\n                className=\"overlay-music-video\"\n              ></iframe>\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}