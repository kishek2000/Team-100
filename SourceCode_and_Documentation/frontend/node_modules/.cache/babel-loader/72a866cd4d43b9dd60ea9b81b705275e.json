{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/Overlay.js\";\nimport React from \"react\";\nexport function Overlay({\n  media_id,\n  media_category,\n  experience,\n  watchData,\n  listenData\n}) {\n  console.log(media_id);\n\n  if (experience === \"WATCH\" && media_id !== -1 && Object.keys(watchData).length > 0) {\n    const records = watchData[media_category];\n    console.log(records);\n    const media_data = watchData[media_category].find(key => key.id === media_id);\n    console.log(media_data);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/Overlay.js"],"names":["React","Overlay","media_id","media_category","experience","watchData","listenData","console","log","Object","keys","length","records","media_data","find","key","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,SAASC,OAAT,CAAiB;AACtBC,EAAAA,QADsB;AAEtBC,EAAAA,cAFsB;AAGtBC,EAAAA,UAHsB;AAItBC,EAAAA,SAJsB;AAKtBC,EAAAA;AALsB,CAAjB,EAMJ;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AACA,MACEE,UAAU,KAAK,OAAf,IACAF,QAAQ,KAAK,CAAC,CADd,IAEAO,MAAM,CAACC,IAAP,CAAYL,SAAZ,EAAuBM,MAAvB,GAAgC,CAHlC,EAIE;AACA,UAAMC,OAAO,GAAGP,SAAS,CAACF,cAAD,CAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACA,UAAMC,UAAU,GAAGR,SAAS,CAACF,cAAD,CAAT,CAA0BW,IAA1B,CAChBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWd,QADH,CAAnB;AAGAK,IAAAA,OAAO,CAACC,GAAR,CAAYK,UAAZ;AACD;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD","sourcesContent":["import React from \"react\";\nexport function Overlay({\n  media_id,\n  media_category,\n  experience,\n  watchData,\n  listenData,\n}) {\n  console.log(media_id);\n  if (\n    experience === \"WATCH\" &&\n    media_id !== -1 &&\n    Object.keys(watchData).length > 0\n  ) {\n    const records = watchData[media_category];\n    console.log(records);\n    const media_data = watchData[media_category].find(\n      (key) => key.id === media_id\n    );\n    console.log(media_data);\n  }\n  return <div></div>;\n}\n"]},"metadata":{},"sourceType":"module"}