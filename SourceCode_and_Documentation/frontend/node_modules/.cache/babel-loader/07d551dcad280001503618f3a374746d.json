{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/ListenOverlay.js\";\nimport React from \"react\";\n\nfunction ListenOverlayMeta({\n  releaseDate,\n  typeLabel,\n  totalTracks,\n  giveString\n}) {\n  if (totalTracks === 1) {\n    typeLabel = \"Single\";\n    totalTracks = null;\n  } else if (typeLabel !== \"album\") {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n  } else {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n    totalTracks = `${totalTracks} Tracks`;\n  }\n\n  if (giveString) {\n    return [releaseDate, typeLabel, totalTracks].filter(item => !!item).join(\" | \");\n  }\n\n  return typeLabel;\n}\n\nexport function ListenOverlay({\n  media_data,\n  setOpenOverlayID,\n  setOverlayData,\n  listenYTLink,\n  setListenYTLink\n}) {\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-poster-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: media_data[\"imgURL\"],\n    className: \"overlay-poster-music\",\n    alt: \"media-poster\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), media_data[\"copyright_statement\"] !== \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listen-copyrights\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, media_data[\"copyright_statement\"]) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-information-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, media_data[\"listen_name\"]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-text\",\n    onClick: () => {\n      setOpenOverlayID(-1);\n      setOverlayData({});\n      setListenYTLink({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, media_data[\"type\"] === \"album\" || media_data[\"type\"] === \"single\" ? media_data[\"artist_name\"] : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-meta-listen-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListenOverlayMeta, {\n    releaseDate: media_data[\"release_date\"],\n    typeLabel: media_data[\"type\"],\n    totalTracks: media_data[\"total_tracks\"],\n    giveString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), media_data[\"type\"] === \"podcast\" || media_data[\"type\"] === \"playlist\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Description\"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-listen-description-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, media_data[\"description\"])) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Play Now\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-viewing-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spotify-listen\",\n    style: Object.keys(listenYTLink).length > 0 && listenYTLink !== \"\" ? {\n      width: \"50%\"\n    } : {\n      width: \"97%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-listen-options-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Spotify:\"), /*#__PURE__*/React.createElement(\"iframe\", {\n    src: media_data[\"listen_link\"].slice(0, 25) + \"embed/\" + media_data[\"listen_link\"].slice(25),\n    className: \"spotify-play\",\n    title: \"play\",\n    frameborder: \"0\",\n    allowtransparency: \"true\",\n    allow: \"encrypted-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), Object.keys(listenYTLink).length > 0 && listenYTLink !== \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listen-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-listen-options-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Youtube -\", \" \", String(ListenOverlayMeta({\n    releaseDate: media_data[\"release_date\"],\n    typeLabel: media_data[\"type\"],\n    totalTracks: media_data[\"total_tracks\"],\n    giveString: false\n  })) === \"Single\" || String(ListenOverlayMeta({\n    releaseDate: media_data[\"release_date\"],\n    typeLabel: media_data[\"type\"],\n    totalTracks: media_data[\"total_tracks\"],\n    giveString: false\n  })) === \"Track\" ? \"Full Music Video\" : \"Full \" + String(ListenOverlayMeta({\n    releaseDate: media_data[\"release_date\"],\n    typeLabel: media_data[\"type\"],\n    totalTracks: media_data[\"total_tracks\"],\n    giveString: false\n  })), \":\"), /*#__PURE__*/React.createElement(\"iframe\", {\n    title: \"music-video\",\n    src: listenYTLink,\n    allowfullscreen: \"allowfullscreen\",\n    className: \"overlay-music-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/ListenOverlay.js"],"names":["React","ListenOverlayMeta","releaseDate","typeLabel","totalTracks","giveString","toUpperCase","slice","filter","item","join","ListenOverlay","media_data","setOpenOverlayID","setOverlayData","listenYTLink","setListenYTLink","Object","keys","length","width","String"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction ListenOverlayMeta({\n  releaseDate,\n  typeLabel,\n  totalTracks,\n  giveString,\n}) {\n  if (totalTracks === 1) {\n    typeLabel = \"Single\";\n    totalTracks = null;\n  } else if (typeLabel !== \"album\") {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n  } else {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n    totalTracks = `${totalTracks} Tracks`;\n  }\n  if (giveString) {\n    return [releaseDate, typeLabel, totalTracks]\n      .filter((item) => !!item)\n      .join(\" | \");\n  }\n  return typeLabel;\n}\n\nexport function ListenOverlay({\n  media_data,\n  setOpenOverlayID,\n  setOverlayData,\n  listenYTLink,\n  setListenYTLink,\n}) {\n  return (\n    <section className=\"overlay\">\n      <div className=\"overlay-poster-wrapper\">\n        <img\n          src={media_data[\"imgURL\"]}\n          className=\"overlay-poster-music\"\n          alt=\"media-poster\"\n        />\n        {media_data[\"copyright_statement\"] !== \"\" ? (\n          <div className=\"listen-copyrights\">\n            {media_data[\"copyright_statement\"]}\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n      <div className=\"overlay-information\">\n        <div className=\"overlay-information-header\">\n          <div className=\"overlay-title\">{media_data[\"listen_name\"]}</div>\n          <div\n            className=\"close-text\"\n            onClick={() => {\n              setOpenOverlayID(-1);\n              setOverlayData({});\n              setListenYTLink({});\n            }}\n          >\n            X\n          </div>\n        </div>\n\n        <div className=\"overlay-subtitle\">\n          {media_data[\"type\"] === \"album\" || media_data[\"type\"] === \"single\"\n            ? media_data[\"artist_name\"]\n            : \"\"}\n        </div>\n        <div className=\"overlay-meta-listen-text\">\n          <ListenOverlayMeta\n            releaseDate={media_data[\"release_date\"]}\n            typeLabel={media_data[\"type\"]}\n            totalTracks={media_data[\"total_tracks\"]}\n            giveString={true}\n          />\n        </div>\n        {media_data[\"type\"] === \"podcast\" ||\n        media_data[\"type\"] === \"playlist\" ? (\n          <div className=\"overlay-description\">\n            {\" \"}\n            <div className=\"overlay-subtitle\">Description</div>{\" \"}\n            <div className=\"overlay-listen-description-text\">\n              {media_data[\"description\"]}\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n        <div className=\"overlay-subtitle\">Play Now</div>\n        <div className=\"overlay-viewing-row\">\n          <div\n            className=\"spotify-listen\"\n            style={\n              Object.keys(listenYTLink).length > 0 && listenYTLink !== \"\"\n                ? { width: \"50%\" }\n                : { width: \"97%\" }\n            }\n          >\n            <div className=\"overlay-listen-options-text\">Spotify:</div>\n            <iframe\n              src={\n                media_data[\"listen_link\"].slice(0, 25) +\n                \"embed/\" +\n                media_data[\"listen_link\"].slice(25)\n              }\n              className=\"spotify-play\"\n              title=\"play\"\n              frameborder=\"0\"\n              allowtransparency=\"true\"\n              allow=\"encrypted-media\"\n            ></iframe>\n          </div>\n          {Object.keys(listenYTLink).length > 0 && listenYTLink !== \"\" ? (\n            <div className=\"listen-video\">\n              <div className=\"overlay-listen-options-text\">\n                Youtube -{\" \"}\n                {String(\n                  ListenOverlayMeta({\n                    releaseDate: media_data[\"release_date\"],\n                    typeLabel: media_data[\"type\"],\n                    totalTracks: media_data[\"total_tracks\"],\n                    giveString: false,\n                  })\n                ) === \"Single\" ||\n                String(\n                  ListenOverlayMeta({\n                    releaseDate: media_data[\"release_date\"],\n                    typeLabel: media_data[\"type\"],\n                    totalTracks: media_data[\"total_tracks\"],\n                    giveString: false,\n                  })\n                ) === \"Track\"\n                  ? \"Full Music Video\"\n                  : \"Full \" +\n                    String(\n                      ListenOverlayMeta({\n                        releaseDate: media_data[\"release_date\"],\n                        typeLabel: media_data[\"type\"],\n                        totalTracks: media_data[\"total_tracks\"],\n                        giveString: false,\n                      })\n                    )}\n                :\n              </div>\n              <iframe\n                title=\"music-video\"\n                src={listenYTLink}\n                allowfullscreen=\"allowfullscreen\"\n                className=\"overlay-music-video\"\n              ></iframe>\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}