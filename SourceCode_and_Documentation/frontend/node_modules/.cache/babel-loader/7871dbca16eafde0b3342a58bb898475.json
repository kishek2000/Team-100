{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport ReactDOM from \"react-dom\"; // import { SearchBar } from \"./components/SearchBar\";\n// import { MediaSelector } from \"./components/MediaSelector\";\n// import { OPTIONS, SEARCHTEXT } from \"./components/constants\";\n// import { Experience } from \"./components/Experience\";\n// function Header(props) {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <p className=\"myLounge-heading\">myLounge</p>\n//         <p className=\"myLounge-subtitle\">Listen. Watch. Relax.</p>\n//         <SearchBar\n//           name=\"searchbar-menu\"\n//           inputname=\"searchinput-menu\"\n//           imagename=\"searchbutton-menu\"\n//           placeholder=\"Search for Movie, TV Show, Podcast or Music by name...\"\n//         />\n//       </header>\n//     </div>\n//   );\n// }\n// function App() {\n//   const [mediaSelected, setMediaSelected] = useState(\"WATCH\");\n//   const [searchAll, setSearchAll] = (useState = \"\");\n//   const [searchMedia, setSearchMedia] = useState(\"\");\n//   /*\n//   if (searchQuery is populated in SearchAll):\n//   <SearchAll />\n//   <SearchResults query=searchQuery media=all/>\n//   if (searchQuery is populated in SearchMedia):\n//   <Header />\n//   <SearchResults query=searchQuery media=mediaSelected/>\n//   if (searchQuery is not populated):\n//   <Header />\n//   <Experience currentExperience = mediaSelected />\n//   */\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <p className=\"myLounge-heading\">myLounge</p>\n//         <p className=\"myLounge-subtitle\">Listen. Watch. Relax.</p>\n//         <SearchBar\n//           name=\"searchbar-menu\"\n//           inputname=\"searchinput-menu\"\n//           imagename=\"searchbutton-menu\"\n//           placeholder=\"Search for Movie, TV Show, Podcast or Music by name...\"\n//         />\n//       </header>\n//       <section className=\"App-media-options\">\n//         <div className=\"filters-header\">\n//           <div className=\"media-selection\">\n//             <p className=\"selection-label\">I want to</p>\n//             {OPTIONS.map(option => (\n//               <MediaSelector\n//                 key={option}\n//                 option={option}\n//                 isSelected={mediaSelected === option}\n//                 onClick={option => {\n//                   setMediaSelected(option);\n//                 }}\n//               />\n//             ))}\n//           </div>\n//           <SearchBar\n//             name=\"searchbar\"\n//             inputname=\"searchinput\"\n//             imagename=\"searchbutton\"\n//             placeholder={SEARCHTEXT[mediaSelected]}\n//           />\n//         </div>\n//         <Experience currentExperience={mediaSelected} />\n//       </section>\n//     </div>\n//   );\n// }\n// export default App;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.placeholder\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(\"current handlechange value: \" + event.target.value);\n    this.setState({\n      value: event.target.value\n    });\n\n    if (event.target.value === \"\") {\n      document.getElementById(\"search-results\").style.display = \"none\";\n    }\n  }\n\n  handleSubmit(event) {\n    this.setState({\n      value: event.target.value\n    });\n    console.log(\"you submitted\");\n    ReactDOM.render( /*#__PURE__*/React.createElement(SearchResults, {\n      query: event.target.value,\n      media: \"all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }), document.getElementById(\"search-results\"));\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"myLounge-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, \"myLounge\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"myLounge-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"Listen. Watch. Relax.\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"searchbar-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://img.icons8.com/android/24/000000/search.png\",\n      className: this.props.imagename,\n      alt: \"searchIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: this.props.inputname,\n      type: \"text\",\n      placeholder: this.props.placeholder,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nfunction SearchResults(props) {\n  const searchQuery = props.query;\n  const mediaType = props.media; // const searchData = SearchMedia(mediaType);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, mediaType, \" Results for: \\\"\", searchQuery, \"\\\"\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/App.js"],"names":["React","ReactDOM","App","Component","constructor","props","state","value","placeholder","handleChange","bind","handleSubmit","event","console","log","target","setState","document","getElementById","style","display","render","preventDefault","imagename","inputname","SearchResults","searchQuery","query","mediaType","media"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport ReactDOM from \"react-dom\";\n\n// import { SearchBar } from \"./components/SearchBar\";\n// import { MediaSelector } from \"./components/MediaSelector\";\n// import { OPTIONS, SEARCHTEXT } from \"./components/constants\";\n// import { Experience } from \"./components/Experience\";\n\n// function Header(props) {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <p className=\"myLounge-heading\">myLounge</p>\n//         <p className=\"myLounge-subtitle\">Listen. Watch. Relax.</p>\n//         <SearchBar\n//           name=\"searchbar-menu\"\n//           inputname=\"searchinput-menu\"\n//           imagename=\"searchbutton-menu\"\n//           placeholder=\"Search for Movie, TV Show, Podcast or Music by name...\"\n//         />\n//       </header>\n//     </div>\n//   );\n// }\n\n// function App() {\n//   const [mediaSelected, setMediaSelected] = useState(\"WATCH\");\n//   const [searchAll, setSearchAll] = (useState = \"\");\n//   const [searchMedia, setSearchMedia] = useState(\"\");\n\n//   /*\n//   if (searchQuery is populated in SearchAll):\n//   <SearchAll />\n//   <SearchResults query=searchQuery media=all/>\n//   if (searchQuery is populated in SearchMedia):\n//   <Header />\n//   <SearchResults query=searchQuery media=mediaSelected/>\n//   if (searchQuery is not populated):\n//   <Header />\n//   <Experience currentExperience = mediaSelected />\n//   */\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <p className=\"myLounge-heading\">myLounge</p>\n//         <p className=\"myLounge-subtitle\">Listen. Watch. Relax.</p>\n//         <SearchBar\n//           name=\"searchbar-menu\"\n//           inputname=\"searchinput-menu\"\n//           imagename=\"searchbutton-menu\"\n//           placeholder=\"Search for Movie, TV Show, Podcast or Music by name...\"\n//         />\n//       </header>\n//       <section className=\"App-media-options\">\n//         <div className=\"filters-header\">\n//           <div className=\"media-selection\">\n//             <p className=\"selection-label\">I want to</p>\n//             {OPTIONS.map(option => (\n//               <MediaSelector\n//                 key={option}\n//                 option={option}\n//                 isSelected={mediaSelected === option}\n//                 onClick={option => {\n//                   setMediaSelected(option);\n//                 }}\n//               />\n//             ))}\n//           </div>\n//           <SearchBar\n//             name=\"searchbar\"\n//             inputname=\"searchinput\"\n//             imagename=\"searchbutton\"\n//             placeholder={SEARCHTEXT[mediaSelected]}\n//           />\n//         </div>\n//         <Experience currentExperience={mediaSelected} />\n//       </section>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: this.props.placeholder };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event) {\n    console.log(\"current handlechange value: \" + event.target.value);\n    this.setState({ value: event.target.value });\n    if (event.target.value === \"\") {\n      document.getElementById(\"search-results\").style.display = \"none\";\n    }\n  }\n\n  handleSubmit(event) {\n    this.setState({ value: event.target.value });\n    console.log(\"you submitted\");\n    ReactDOM.render(\n      <SearchResults query={event.target.value} media=\"all\" />,\n      document.getElementById(\"search-results\")\n    );\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p className=\"myLounge-heading\">myLounge</p>\n          <p className=\"myLounge-subtitle\">Listen. Watch. Relax.</p>\n          <form onSubmit={this.handleSubmit} className=\"searchbar-menu\">\n            <img\n              src=\"https://img.icons8.com/android/24/000000/search.png\"\n              className={this.props.imagename}\n              alt=\"searchIcon\"\n            ></img>\n            <input\n              className={this.props.inputname}\n              type=\"text\"\n              placeholder={this.props.placeholder}\n              onChange={this.handleChange}\n            />\n          </form>\n        </header>\n      </div>\n    );\n  }\n}\n\nfunction SearchResults(props) {\n  const searchQuery = props.query;\n  const mediaType = props.media;\n  // const searchData = SearchMedia(mediaType);\n  return (\n    <div className=\"search-results\">\n      <div className=\"search-title\">\n        {mediaType} Results for: \"{searchQuery}\"\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}