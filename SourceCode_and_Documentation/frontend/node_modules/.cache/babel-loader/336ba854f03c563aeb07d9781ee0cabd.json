{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/WatchOverlay.js\";\nimport React from \"react\";\nimport LoadingSpinner from \"../images/tail-spin.svg\";\nexport function WatchOverlayMeta({\n  airDate,\n  language,\n  rating,\n  genre\n}) {\n  return [airDate, language, rating, genre].filter(item => !!item).join(\" | \");\n}\nconst COLOR_EXCELLENT = \"#35E903\";\nconst COLOR_GREAT = \"#2FFF55\";\nconst COLOR_GOOD = \"#CDFFAA\";\nconst COLOR_OK = \"#B1FFEC\";\nconst COLOR_BAD = \"#C3C5EF\";\nconst COLOR_TERRIBLE = \"#C32E2E\";\nconst COLOR_NO_DATA = \"\";\n\nfunction bgMap(rating) {\n  if (rating >= 9) {\n    return COLOR_EXCELLENT;\n  } else if (rating >= 8) {\n    return COLOR_GREAT;\n  } else if (rating >= 7) {\n    return COLOR_GOOD;\n  } else if (rating >= 6) {\n    return COLOR_OK;\n  } else if (rating >= 5) {\n    return COLOR_BAD;\n  } else if (rating >= 0) {\n    return COLOR_TERRIBLE;\n  } else {\n    //Negative rating == no data\n    return COLOR_NO_DATA;\n  }\n}\n\nexport function WatchOverlay({\n  media_data,\n  setOpenOverlayID,\n  setOverlayData,\n  servicesData,\n  setServicesData,\n  watchReviewData,\n  tvReviewData\n}) {\n  console.log(watchReviewData);\n  console.log(tvReviewData);\n  console.log(media_data);\n\n  if (tvReviewData.length > 0) {\n    const reviewTable = tvReviewData.map((season, index) => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, \"Season \", index, \": \", season.length, \" episodes\"));\n    console.log(reviewTable);\n  }\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-poster-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: media_data[\"imgURL\"],\n    className: \"overlay-poster\",\n    alt: \"media-poster\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-information-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, media_data[\"name\"]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-text selected\",\n    onClick: () => {\n      setOverlayData({});\n      setOpenOverlayID(-1);\n      setServicesData({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-meta-watch-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WatchOverlayMeta, {\n    airDate: media_data[\"first_air_date\"],\n    language: media_data[\"lang\"],\n    rating: media_data[\"content_rating\"],\n    genre: media_data[\"genres\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), \" \", \"|\", \" \", /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://img.icons8.com/color/48/000000/imdb.png\",\n    alt: \"imdb-score:\",\n    className: \"overlay-imdb-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), typeof watchReviewData === \"number\" ? watchReviewData : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 68\n    }\n  })), media_data[\"overview\"] !== \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-watch-description-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, media_data[\"overview\"])) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-trailer-and-reviews\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, media_data[\"trailer\"] !== \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"Trailer\"), /*#__PURE__*/React.createElement(\"iframe\", {\n    title: \"trailer\",\n    src: media_data[\"trailer\"],\n    allowFullScreen: true,\n    className: \"overlay-trailer-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), tvReviewData.length > 0 ?\n  /*#__PURE__*/\n  //reviewTable\n  React.createElement(\"div\", {\n    className: \"imdb-tv-scores\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"Reviews across seasons\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-table\",\n    style: media_data[\"trailer\"] !== \"\" ? {\n      width: \"30vw\"\n    } : {\n      width: \"60vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, tvReviewData.map((season, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-table-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-season-description-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"Season \" + String(index + 1)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-table-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, season.map(episode => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-table-cell\",\n    style: {\n      backgroundColor: bgMap(episode.rating)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, episode.rating >= 0 ? episode.rating : \"-\"))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-services\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, \"Streaming Services\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"services-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, servicesData[0] !== undefined ? servicesData[0] !== \"empty\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"services-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, servicesData.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"service-name\",\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: item[\"link\"],\n    target: \"_blank\",\n    className: \"service-redirect\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 23\n    }\n  }, item[\"name\"])))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-watch-description-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, \"Sorry! There are currently no services available.\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-watch-description-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, \"Loading...\", /*#__PURE__*/React.createElement(\"img\", {\n    src: LoadingSpinner,\n    alt: \"load\",\n    className: \"overlay-loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/WatchOverlay.js"],"names":["React","WatchOverlayMeta","airDate","language","rating","genre","filter","item","join","COLOR_EXCELLENT","COLOR_GREAT","COLOR_GOOD","COLOR_OK","COLOR_BAD","COLOR_TERRIBLE","COLOR_NO_DATA","bgMap","WatchOverlay","media_data","setOpenOverlayID","setOverlayData","servicesData","setServicesData","watchReviewData","tvReviewData","console","log","length","reviewTable","map","season","index","width","String","episode","backgroundColor","undefined","LoadingSpinner"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport LoadingSpinner from \"../images/tail-spin.svg\";\n\nexport function WatchOverlayMeta({ airDate, language, rating, genre }) {\n  return [airDate, language, rating, genre]\n    .filter((item) => !!item)\n    .join(\" | \");\n}\n\nconst COLOR_EXCELLENT = \"#35E903\";\nconst COLOR_GREAT = \"#2FFF55\";\nconst COLOR_GOOD = \"#CDFFAA\";\nconst COLOR_OK = \"#B1FFEC\";\nconst COLOR_BAD = \"#C3C5EF\";\nconst COLOR_TERRIBLE = \"#C32E2E\";\nconst COLOR_NO_DATA = \"\";\n\nfunction bgMap(rating) {\n  if (rating >= 9) {\n    return COLOR_EXCELLENT;\n  } else if (rating >= 8) {\n    return COLOR_GREAT;\n  } else if (rating >= 7) {\n    return COLOR_GOOD;\n  } else if (rating >= 6) {\n    return COLOR_OK;\n  } else if (rating >= 5) {\n    return COLOR_BAD;\n  } else if (rating >= 0) {\n    return COLOR_TERRIBLE;\n  } else {\n    //Negative rating == no data\n    return COLOR_NO_DATA;\n  }\n}\n\nexport function WatchOverlay({\n  media_data,\n  setOpenOverlayID,\n  setOverlayData,\n  servicesData,\n  setServicesData,\n  watchReviewData,\n  tvReviewData,\n}) {\n  console.log(watchReviewData);\n  console.log(tvReviewData);\n  console.log(media_data);\n  if (tvReviewData.length > 0) {\n    const reviewTable = tvReviewData.map((season, index) => (\n      <li>\n        Season {index}: {season.length} episodes\n      </li>\n    ));\n    console.log(reviewTable);\n  }\n\n  return (\n    <section className=\"overlay\">\n      <div className=\"overlay-poster-wrapper\">\n        <img\n          src={media_data[\"imgURL\"]}\n          className=\"overlay-poster\"\n          alt=\"media-poster\"\n        />\n      </div>\n      <div className=\"overlay-information\">\n        <div className=\"overlay-information-header\">\n          <div className=\"overlay-title\">{media_data[\"name\"]}</div>\n          <div\n            className=\"close-text selected\"\n            onClick={() => {\n              setOverlayData({});\n              setOpenOverlayID(-1);\n              setServicesData({});\n            }}\n          >\n            X\n          </div>\n        </div>\n        <div className=\"overlay-meta-watch-text\">\n          <WatchOverlayMeta\n            airDate={media_data[\"first_air_date\"]}\n            language={media_data[\"lang\"]}\n            rating={media_data[\"content_rating\"]}\n            genre={media_data[\"genres\"]}\n          />{\" \"}\n          |{\" \"}\n          <img\n            src=\"https://img.icons8.com/color/48/000000/imdb.png\"\n            alt=\"imdb-score:\"\n            className=\"overlay-imdb-logo\"\n          />\n          {typeof watchReviewData === \"number\" ? watchReviewData : <div></div>}\n        </div>\n        {media_data[\"overview\"] !== \"\" ? (\n          <div className=\"overlay-description\">\n            <div className=\"overlay-subtitle\">Description</div>\n            <div className=\"overlay-watch-description-text\">\n              {media_data[\"overview\"]}\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n        <div className=\"overlay-trailer-and-reviews\">\n          {media_data[\"trailer\"] !== \"\" ? (\n            <div>\n              <div className=\"overlay-subtitle\">Trailer</div>\n              <iframe\n                title=\"trailer\"\n                src={media_data[\"trailer\"]}\n                allowFullScreen={true}\n                className=\"overlay-trailer-video\"\n              ></iframe>\n            </div>\n          ) : (\n            <div></div>\n          )}\n\n          {tvReviewData.length > 0 ? (\n            //reviewTable\n            <div className=\"imdb-tv-scores\">\n              <div className=\"overlay-subtitle\">Reviews across seasons</div>\n              <div\n                className=\"overlay-table\"\n                style={\n                  media_data[\"trailer\"] !== \"\"\n                    ? { width: \"30vw\" }\n                    : { width: \"60vw\" }\n                }\n              >\n                {tvReviewData.map((season, index) => (\n                  <div className=\"overlay-table-data\">\n                    <div className=\"overlay-season-description-text\">\n                      {\"Season \" + String(index + 1)}\n                    </div>\n                    <div className=\"overlay-table-column\">\n                      {season.map((episode) => (\n                        <div\n                          className=\"overlay-table-cell\"\n                          style={{\n                            backgroundColor: bgMap(episode.rating),\n                          }}\n                        >\n                          {episode.rating >= 0 ? episode.rating : \"-\"}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n        <div className=\"overlay-services\">\n          <div className=\"overlay-subtitle\">Streaming Services</div>\n          <div className=\"services-list\">\n            {servicesData[0] !== undefined ? (\n              servicesData[0] !== \"empty\" ? (\n                <div className=\"services-buttons\">\n                  {servicesData.map((item, index) => (\n                    <div className=\"service-name\" index={index}>\n                      <a\n                        href={item[\"link\"]}\n                        target=\"_blank\"\n                        className=\"service-redirect\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {item[\"name\"]}\n                      </a>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"overlay-watch-description-text\">\n                  Sorry! There are currently no services available.\n                </div>\n              )\n            ) : (\n              <div className=\"overlay-watch-description-text\">\n                Loading...\n                <img\n                  src={LoadingSpinner}\n                  alt=\"load\"\n                  className=\"overlay-loader\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}