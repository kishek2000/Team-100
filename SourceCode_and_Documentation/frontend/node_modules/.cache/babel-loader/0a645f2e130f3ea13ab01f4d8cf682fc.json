{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/FilterWatchBar.js\";\nimport React from \"react\";\nimport { Dropdown } from \"./Dropdown\"; // This is the search bar component. Provide it specified class names for one\n// of the two main styles. Either menu, or normal.\n\nexport class FilterWatchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.filterHome = this.filterHome.bind(this);\n    this.clearGenreFilter = this.clearGenreFilter.bind(this);\n  }\n\n  clearGenreFilter(doClear) {\n    if (doClear) {\n      this.props.setMovGenresSelected(\"\");\n      this.props.setTVGenresSelected(\"\");\n      this.props.getWatchData();\n    }\n  }\n\n  filterHome(mediaGenres, mode, watchCategory) {\n    var tvGenres, movieGenres;\n\n    if (mode === \"TV Shows\") {\n      tvGenres = mediaGenres;\n    } else {\n      movieGenres = mediaGenres;\n    }\n\n    console.log(\"you submitted the filters of: \", tvGenres, movieGenres, watchCategory);\n\n    if (String(tvGenres).length > 0 || String(movieGenres).length > 0) {\n      this.props.getWatchFilteredData(movieGenres, tvGenres, watchCategory);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home-filter-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, this.props.watchMode === \"Movies\" && /*#__PURE__*/React.createElement(Dropdown, {\n      options: this.props.movieGenreOptions,\n      placeholder: \"Movie Genres...\",\n      setData: this.props.setMovGenresSelected,\n      class: \"movie-genres-filter\",\n      isMulti: true,\n      onClear: this.clearGenreFilter,\n      mode: this.props.watchMode,\n      watchCategory: this.props.watchCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }), this.props.watchMode === \"TV Shows\" && /*#__PURE__*/React.createElement(Dropdown, {\n      options: this.props.tvGenreOptions,\n      placeholder: \"TV Genres...\",\n      setData: this.props.setTVGenresSelected,\n      class: \"tv-genres-filter\",\n      isMulti: true,\n      onClear: this.clearGenreFilter,\n      mode: this.props.watchMode,\n      watchCategory: this.props.watchCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/FilterWatchBar.js"],"names":["React","Dropdown","FilterWatchBar","Component","constructor","props","filterHome","bind","clearGenreFilter","doClear","setMovGenresSelected","setTVGenresSelected","getWatchData","mediaGenres","mode","watchCategory","tvGenres","movieGenres","console","log","String","length","getWatchFilteredData","render","watchMode","movieGenreOptions","tvGenreOptions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CAEA;AACA;;AACA,OAAO,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDC,EAAAA,gBAAgB,CAACC,OAAD,EAAU;AACxB,QAAIA,OAAJ,EAAa;AACX,WAAKJ,KAAL,CAAWK,oBAAX,CAAgC,EAAhC;AACA,WAAKL,KAAL,CAAWM,mBAAX,CAA+B,EAA/B;AACA,WAAKN,KAAL,CAAWO,YAAX;AACD;AACF;;AAEDN,EAAAA,UAAU,CAACO,WAAD,EAAcC,IAAd,EAAoBC,aAApB,EAAmC;AAC3C,QAAIC,QAAJ,EAAcC,WAAd;;AACA,QAAIH,IAAI,KAAK,UAAb,EAAyB;AACvBE,MAAAA,QAAQ,GAAGH,WAAX;AACD,KAFD,MAEO;AACLI,MAAAA,WAAW,GAAGJ,WAAd;AACD;;AACDK,IAAAA,OAAO,CAACC,GAAR,CACE,gCADF,EAEEH,QAFF,EAGEC,WAHF,EAIEF,aAJF;;AAMA,QAAIK,MAAM,CAACJ,QAAD,CAAN,CAAiBK,MAAjB,GAA0B,CAA1B,IAA+BD,MAAM,CAACH,WAAD,CAAN,CAAoBI,MAApB,GAA6B,CAAhE,EAAmE;AACjE,WAAKhB,KAAL,CAAWiB,oBAAX,CAAgCL,WAAhC,EAA6CD,QAA7C,EAAuDD,aAAvD;AACD;AACF;;AAEDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlB,KAAL,CAAWmB,SAAX,KAAyB,QAAzB,iBACC,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWoB,iBADtB;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,OAAO,EAAE,KAAKpB,KAAL,CAAWK,oBAHtB;AAIE,MAAA,KAAK,EAAC,qBAJR;AAKE,MAAA,OAAO,EAAE,IALX;AAME,MAAA,OAAO,EAAE,KAAKF,gBANhB;AAOE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWmB,SAPnB;AAQE,MAAA,aAAa,EAAE,KAAKnB,KAAL,CAAWU,aAR5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAaG,KAAKV,KAAL,CAAWmB,SAAX,KAAyB,UAAzB,iBACC,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWqB,cADtB;AAEE,MAAA,WAAW,EAAC,cAFd;AAGE,MAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWM,mBAHtB;AAIE,MAAA,KAAK,EAAC,kBAJR;AAKE,MAAA,OAAO,EAAE,IALX;AAME,MAAA,OAAO,EAAE,KAAKH,gBANhB;AAOE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWmB,SAPnB;AAQE,MAAA,aAAa,EAAE,KAAKnB,KAAL,CAAWU,aAR5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,CADF,CADF;AA8BD;;AAhEiD","sourcesContent":["import React from \"react\";\nimport { Dropdown } from \"./Dropdown\";\n\n// This is the search bar component. Provide it specified class names for one\n// of the two main styles. Either menu, or normal.\nexport class FilterWatchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.filterHome = this.filterHome.bind(this);\n    this.clearGenreFilter = this.clearGenreFilter.bind(this);\n  }\n\n  clearGenreFilter(doClear) {\n    if (doClear) {\n      this.props.setMovGenresSelected(\"\");\n      this.props.setTVGenresSelected(\"\");\n      this.props.getWatchData();\n    }\n  }\n\n  filterHome(mediaGenres, mode, watchCategory) {\n    var tvGenres, movieGenres;\n    if (mode === \"TV Shows\") {\n      tvGenres = mediaGenres;\n    } else {\n      movieGenres = mediaGenres;\n    }\n    console.log(\n      \"you submitted the filters of: \",\n      tvGenres,\n      movieGenres,\n      watchCategory\n    );\n    if (String(tvGenres).length > 0 || String(movieGenres).length > 0) {\n      this.props.getWatchFilteredData(movieGenres, tvGenres, watchCategory);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"filter-form\">\n        <div className=\"home-filter-row\">\n          {this.props.watchMode === \"Movies\" && (\n            <Dropdown\n              options={this.props.movieGenreOptions}\n              placeholder=\"Movie Genres...\"\n              setData={this.props.setMovGenresSelected}\n              class=\"movie-genres-filter\"\n              isMulti={true}\n              onClear={this.clearGenreFilter}\n              mode={this.props.watchMode}\n              watchCategory={this.props.watchCategory}\n            />\n          )}\n          {this.props.watchMode === \"TV Shows\" && (\n            <Dropdown\n              options={this.props.tvGenreOptions}\n              placeholder=\"TV Genres...\"\n              setData={this.props.setTVGenresSelected}\n              class=\"tv-genres-filter\"\n              isMulti={true}\n              onClear={this.clearGenreFilter}\n              mode={this.props.watchMode}\n              watchCategory={this.props.watchCategory}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}