{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/Overlay.js\";\nimport React from \"react\";\n\nfunction WatchOverlayMeta({\n  airDate,\n  language,\n  rating,\n  genre\n}) {\n  return [airDate, language, rating, genre].filter(item => !!item).join(\" | \");\n}\n\nfunction ListenOverlayMeta({\n  releaseDate,\n  typeLabel,\n  totalTracks\n}) {\n  if (totalTracks === 1) {\n    typeLabel = \"Single\";\n    totalTracks = null;\n  } else if (typeLabel !== \"album\") {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n  } else {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n    totalTracks = `${totalTracks} Tracks`;\n  }\n\n  console.log(typeLabel);\n  return [releaseDate, typeLabel, totalTracks].filter(item => !!item).join(\" | \");\n}\n\nexport function Overlay({\n  experience,\n  data,\n  setOpenOverlayID,\n  media_id,\n  setOverlayData\n}) {\n  // const id, media = media_id.split()\n  if (Object.keys(data).length > 0 && media_id !== -1) {\n    const record = data[\"data\"];\n\n    if (Object.keys(record).length > 0 && media_id !== -1) {\n      const media_data = record[0];\n\n      if (experience === \"WATCH\") {\n        return /*#__PURE__*/React.createElement(WatchOverlay, {\n          media_data: media_data,\n          setOpenOverlayID: setOpenOverlayID,\n          setOverlayData: setOverlayData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(ListenOverlay, {\n          media_data: media_data,\n          setOpenOverlayID: setOpenOverlayID,\n          setOverlayData: setOverlayData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }\n        });\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  });\n}\n\nfunction WatchOverlay({\n  media_data,\n  setOpenOverlayID,\n  setOverlayData\n}) {\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-poster-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: media_data[\"imgURL\"],\n    className: \"overlay-poster\",\n    alt: \"media-poster\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-information-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, media_data[\"name\"]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-text\",\n    onClick: () => {\n      setOpenOverlayID(-1);\n      setOverlayData({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-meta-watch-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WatchOverlayMeta, {\n    airDate: media_data[\"first_air_date\"],\n    language: media_data[\"lang\"],\n    rating: media_data[\"content_rating\"],\n    genre: media_data[\"genres\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-watch-description-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, media_data[\"overview\"])), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Trailer\"), /*#__PURE__*/React.createElement(\"iframe\", {\n    title: \"trailer\",\n    src: media_data[\"trailer\"],\n    allowfullscreen: \"allowfullscreen\",\n    className: \"overlay-trailer-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction ListenOverlay({\n  media_data,\n  setOpenOverlayID,\n  setOverlayData\n}) {\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-poster-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: media_data[\"imgURL\"],\n    className: \"overlay-poster-music\",\n    alt: \"media-poster\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-information-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, media_data[\"listen_name\"]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-text\",\n    onClick: () => {\n      setOpenOverlayID(-1);\n      setOverlayData({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, media_data[\"type\"] === \"album\" || media_data[\"type\"] === \"single\" ? media_data[\"artist_name\"] : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-meta-listen-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListenOverlayMeta, {\n    releaseDate: media_data[\"release_date\"],\n    typeLabel: media_data[\"type\"],\n    totalTracks: media_data[\"total_tracks\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  })), media_data[\"type\"] === \"podcast\" || media_data[\"type\"] === \"playlist\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Description\"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-listen-description-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, media_data[\"description\"])) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, media_data[\"type\"] === \"podcast\" ? \"Play Latest Episode\" : \"Preview Now\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-listen-options-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, \"Spotify:\"), /*#__PURE__*/React.createElement(\"iframe\", {\n    src: media_data[\"listen_link\"].slice(0, 25) + \"embed/\" + media_data[\"listen_link\"].slice(25),\n    className: \"spotify-play\",\n    title: \"play\",\n    frameborder: \"0\",\n    allowtransparency: \"true\",\n    allow: \"encrypted-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/Overlay.js"],"names":["React","WatchOverlayMeta","airDate","language","rating","genre","filter","item","join","ListenOverlayMeta","releaseDate","typeLabel","totalTracks","toUpperCase","slice","console","log","Overlay","experience","data","setOpenOverlayID","media_id","setOverlayData","Object","keys","length","record","media_data","WatchOverlay","ListenOverlay"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction WatchOverlayMeta({ airDate, language, rating, genre }) {\n  return [airDate, language, rating, genre]\n    .filter((item) => !!item)\n    .join(\" | \");\n}\n\nfunction ListenOverlayMeta({ releaseDate, typeLabel, totalTracks }) {\n  if (totalTracks === 1) {\n    typeLabel = \"Single\";\n    totalTracks = null;\n  } else if (typeLabel !== \"album\") {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n  } else {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n    totalTracks = `${totalTracks} Tracks`;\n  }\n  console.log(typeLabel);\n  return [releaseDate, typeLabel, totalTracks]\n    .filter((item) => !!item)\n    .join(\" | \");\n}\n\nexport function Overlay({\n  experience,\n  data,\n  setOpenOverlayID,\n  media_id,\n  setOverlayData,\n}) {\n  // const id, media = media_id.split()\n  if (Object.keys(data).length > 0 && media_id !== -1) {\n    const record = data[\"data\"];\n    if (Object.keys(record).length > 0 && media_id !== -1) {\n      const media_data = record[0];\n      if (experience === \"WATCH\") {\n        return (\n          <WatchOverlay\n            media_data={media_data}\n            setOpenOverlayID={setOpenOverlayID}\n            setOverlayData={setOverlayData}\n          />\n        );\n      } else {\n        return (\n          <ListenOverlay\n            media_data={media_data}\n            setOpenOverlayID={setOpenOverlayID}\n            setOverlayData={setOverlayData}\n          />\n        );\n      }\n    }\n  }\n  return <div></div>;\n}\n\nfunction WatchOverlay({ media_data, setOpenOverlayID, setOverlayData }) {\n  return (\n    <section className=\"overlay\">\n      <div className=\"overlay-poster-wrapper\">\n        <img\n          src={media_data[\"imgURL\"]}\n          className=\"overlay-poster\"\n          alt=\"media-poster\"\n        />\n      </div>\n      <div className=\"overlay-information\">\n        <div className=\"overlay-information-header\">\n          <div className=\"overlay-title\">{media_data[\"name\"]}</div>\n          <div\n            className=\"close-text\"\n            onClick={() => {\n              setOpenOverlayID(-1);\n              setOverlayData({});\n            }}\n          >\n            X\n          </div>\n        </div>\n        <div className=\"overlay-meta-watch-text\">\n          <WatchOverlayMeta\n            airDate={media_data[\"first_air_date\"]}\n            language={media_data[\"lang\"]}\n            rating={media_data[\"content_rating\"]}\n            genre={media_data[\"genres\"]}\n          />\n        </div>\n        <div className=\"overlay-description\">\n          <div className=\"overlay-subtitle\">Description</div>\n          <div className=\"overlay-watch-description-text\">\n            {media_data[\"overview\"]}\n          </div>\n        </div>\n        <div className=\"overlay-links\"></div>\n        <div className=\"overlay-subtitle\">Trailer</div>\n        <iframe\n          title=\"trailer\"\n          src={media_data[\"trailer\"]}\n          allowfullscreen=\"allowfullscreen\"\n          className=\"overlay-trailer-video\"\n        ></iframe>\n      </div>\n    </section>\n  );\n}\n\nfunction ListenOverlay({ media_data, setOpenOverlayID, setOverlayData }) {\n  return (\n    <section className=\"overlay\">\n      <div className=\"overlay-poster-wrapper\">\n        <img\n          src={media_data[\"imgURL\"]}\n          className=\"overlay-poster-music\"\n          alt=\"media-poster\"\n        />\n      </div>\n      <div className=\"overlay-information\">\n        <div className=\"overlay-information-header\">\n          <div className=\"overlay-title\">{media_data[\"listen_name\"]}</div>\n          <div\n            className=\"close-text\"\n            onClick={() => {\n              setOpenOverlayID(-1);\n              setOverlayData({});\n            }}\n          >\n            X\n          </div>\n        </div>\n        {/* <div className=\"overlay-genres\">{media_data[\"genres\"]}</div> */}\n        <div className=\"overlay-subtitle\">\n          {media_data[\"type\"] === \"album\" || media_data[\"type\"] === \"single\"\n            ? media_data[\"artist_name\"]\n            : \"\"}\n        </div>\n        <div className=\"overlay-meta-listen-text\">\n          <ListenOverlayMeta\n            releaseDate={media_data[\"release_date\"]}\n            typeLabel={media_data[\"type\"]}\n            totalTracks={media_data[\"total_tracks\"]}\n          />\n        </div>\n        {media_data[\"type\"] === \"podcast\" ||\n        media_data[\"type\"] === \"playlist\" ? (\n          <div className=\"overlay-description\">\n            {\" \"}\n            <div className=\"overlay-subtitle\">Description</div>{\" \"}\n            <div className=\"overlay-listen-description-text\">\n              {media_data[\"description\"]}\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n        <div className=\"overlay-links\"></div>\n        <div className=\"overlay-subtitle\">\n          {media_data[\"type\"] === \"podcast\"\n            ? \"Play Latest Episode\"\n            : \"Preview Now\"}\n        </div>\n        <div className=\"overlay-listen-options-text\">Spotify:</div>\n        <iframe\n          src={\n            media_data[\"listen_link\"].slice(0, 25) +\n            \"embed/\" +\n            media_data[\"listen_link\"].slice(25)\n          }\n          className=\"spotify-play\"\n          title=\"play\"\n          frameborder=\"0\"\n          allowtransparency=\"true\"\n          allow=\"encrypted-media\"\n        ></iframe>\n      </div>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}