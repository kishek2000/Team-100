{"ast":null,"code":"export class Client {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n\n  async api(endpoint) {\n    const response = await fetch(`${this.baseUrl}${endpoint}`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    if (!response.ok) {\n      throw Error(response.text);\n    } else {\n      return await response.json();\n    }\n  }\n\n  async getWatchData() {\n    const data = await this.api(\"/api/home/watch\");\n    return data;\n  }\n\n  async getListenData() {\n    const data = await this.api(\"/api/home/listen\");\n    return data;\n  }\n\n  async getWatchSearchResults(query, services) {\n    if (services === []) {\n      const data = await this.api(`/api/search/watch/unfiltered/${query}`);\n      return data;\n    } else {\n      const data = await this.api(`/api/search/watch/filtered/${query}/${services}`);\n      return data;\n    }\n  }\n\n  async getWatchRegionServices(region) {\n    const data = await this.api(`/api/search/watch/filters/${region}`);\n    return data.list;\n  }\n\n  async getListenSearchResults(query) {\n    const data = await this.api(`/api/search/listen/${query}`);\n    return data;\n  }\n\n  async getMediaOverlayData(mediaId, mediaType) {\n    const data = await this.api(`/api/details/${mediaType.toLowerCase()}/${mediaId}`);\n    return data.data;\n  }\n\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/client/index.js"],"names":["Client","constructor","baseUrl","api","endpoint","response","fetch","headers","ok","Error","text","json","getWatchData","data","getListenData","getWatchSearchResults","query","services","getWatchRegionServices","region","list","getListenSearchResults","getMediaOverlayData","mediaId","mediaType","toLowerCase"],"mappings":"AAAA,OAAO,MAAMA,MAAN,CAAa;AAClBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACD;;AAED,QAAMC,GAAN,CAAUC,QAAV,EAAoB;AAClB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKJ,OAAQ,GAAEE,QAAS,EAA5B,EAA+B;AACzDG,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AADgD,KAA/B,CAA5B;;AAGA,QAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AAChB,YAAMC,KAAK,CAACJ,QAAQ,CAACK,IAAV,CAAX;AACD,KAFD,MAEO;AACL,aAAO,MAAML,QAAQ,CAACM,IAAT,EAAb;AACD;AACF;;AAED,QAAMC,YAAN,GAAqB;AACnB,UAAMC,IAAI,GAAG,MAAM,KAAKV,GAAL,CAAS,iBAAT,CAAnB;AACA,WAAOU,IAAP;AACD;;AAED,QAAMC,aAAN,GAAsB;AACpB,UAAMD,IAAI,GAAG,MAAM,KAAKV,GAAL,CAAS,kBAAT,CAAnB;AACA,WAAOU,IAAP;AACD;;AAED,QAAME,qBAAN,CAA4BC,KAA5B,EAAmCC,QAAnC,EAA6C;AAC3C,QAAIA,QAAQ,KAAK,EAAjB,EAAqB;AACnB,YAAMJ,IAAI,GAAG,MAAM,KAAKV,GAAL,CAAU,gCAA+Ba,KAAM,EAA/C,CAAnB;AACA,aAAOH,IAAP;AACD,KAHD,MAGO;AACL,YAAMA,IAAI,GAAG,MAAM,KAAKV,GAAL,CAChB,8BAA6Ba,KAAM,IAAGC,QAAS,EAD/B,CAAnB;AAGA,aAAOJ,IAAP;AACD;AACF;;AAED,QAAMK,sBAAN,CAA6BC,MAA7B,EAAqC;AACnC,UAAMN,IAAI,GAAG,MAAM,KAAKV,GAAL,CAAU,6BAA4BgB,MAAO,EAA7C,CAAnB;AACA,WAAON,IAAI,CAACO,IAAZ;AACD;;AAED,QAAMC,sBAAN,CAA6BL,KAA7B,EAAoC;AAClC,UAAMH,IAAI,GAAG,MAAM,KAAKV,GAAL,CAAU,sBAAqBa,KAAM,EAArC,CAAnB;AACA,WAAOH,IAAP;AACD;;AAED,QAAMS,mBAAN,CAA0BC,OAA1B,EAAmCC,SAAnC,EAA8C;AAC5C,UAAMX,IAAI,GAAG,MAAM,KAAKV,GAAL,CAChB,gBAAeqB,SAAS,CAACC,WAAV,EAAwB,IAAGF,OAAQ,EADlC,CAAnB;AAGA,WAAOV,IAAI,CAACA,IAAZ;AACD;;AArDiB","sourcesContent":["export class Client {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n\n  async api(endpoint) {\n    const response = await fetch(`${this.baseUrl}${endpoint}`, {\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n    if (!response.ok) {\n      throw Error(response.text);\n    } else {\n      return await response.json();\n    }\n  }\n\n  async getWatchData() {\n    const data = await this.api(\"/api/home/watch\");\n    return data;\n  }\n\n  async getListenData() {\n    const data = await this.api(\"/api/home/listen\");\n    return data;\n  }\n\n  async getWatchSearchResults(query, services) {\n    if (services === []) {\n      const data = await this.api(`/api/search/watch/unfiltered/${query}`);\n      return data;\n    } else {\n      const data = await this.api(\n        `/api/search/watch/filtered/${query}/${services}`\n      );\n      return data;\n    }\n  }\n\n  async getWatchRegionServices(region) {\n    const data = await this.api(`/api/search/watch/filters/${region}`);\n    return data.list;\n  }\n\n  async getListenSearchResults(query) {\n    const data = await this.api(`/api/search/listen/${query}`);\n    return data;\n  }\n\n  async getMediaOverlayData(mediaId, mediaType) {\n    const data = await this.api(\n      `/api/details/${mediaType.toLowerCase()}/${mediaId}`\n    );\n    return data.data;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}