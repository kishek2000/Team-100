{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/AppBody.js\";\nimport React, { useState } from \"react\";\nimport { Experience } from \"./Experience\";\nimport { SearchBar } from \"./SearchBar\";\nimport { MediaSelector } from \"./MediaSelector\";\nimport { OPTIONS, SEARCHTEXT, TV_GENRES, MOVIE_GENRES } from \"../constants\";\nimport BackToTop from \"react-back-to-top-button\";\nvar isDark = false;\nexport const AppBody = ({\n  mediaSelected,\n  onMediaChange,\n  watch,\n  listen,\n  onSearchQuery,\n  getWatchData,\n  getListenData,\n  getWatchFilteredData,\n  setSearchQuery,\n  searchQuery,\n  getOverlayData,\n  serviceOptions,\n  setServiceOptions,\n  serviceSelections,\n  setServiceSelections,\n  region,\n  setRegion,\n  getServiceOptions,\n  getOverlayServices,\n  overlayServices,\n  getWatchScore,\n  getTVEpScores,\n  getListenLink,\n  listenCategoryData,\n  setListenCategoryData,\n  getListenCatPlaylist,\n  selectedCat,\n  setSelectedCat,\n  filterSelected,\n  setFilterSelected,\n  movGenresSelected,\n  setMovGenresSelected,\n  tvGenresSelected,\n  setTVGenresSelected\n}) => {\n  const [expandSearch, setExpandSearch] = useState(false);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"App-media-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"color-mode\",\n    onClick: () => {\n      var element = document.body;\n      element.classList.toggle(\"dark-mode\");\n      isDark = !isDark;\n      document.getElementById(\"color-mode-img\").innerHTML = isDark ? \"<img class='light-mode-vector' src='https://img.icons8.com/android/48/000000/sun.png' alt='light-mode'/>\" : \"<img class='dark-mode-vector' src='https://img.icons8.com/ios/50/000000/crescent-moon.png' alt='dark-mode'/>\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"color-mode-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"dark-mode-vector\",\n    src: \"https://img.icons8.com/ios/50/000000/crescent-moon.png\",\n    alt: \"dark-mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters-header\",\n    tabIndex: \"0\",\n    onBlur: () => {\n      console.log(\"you just clicked out of the filters header\");\n      setExpandSearch(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"selection-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"I want to\"), OPTIONS.map(option => /*#__PURE__*/React.createElement(MediaSelector, {\n    key: option,\n    option: option,\n    isSelected: mediaSelected === option,\n    onClick: option => {\n      onMediaChange(option);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(SearchBar, {\n    name: \"searchbar\",\n    inputname: \"searchinput\",\n    imagename: \"searchbutton\",\n    placeholder: SEARCHTEXT[mediaSelected],\n    onSearchQuery: onSearchQuery,\n    searchQuery: searchQuery,\n    original: watch,\n    getWatchData: getWatchData,\n    getListenData: getListenData,\n    setSearchQuery: setSearchQuery,\n    mediaSelected: mediaSelected,\n    setServiceOptions: setServiceOptions,\n    serviceOptions: serviceOptions,\n    serviceSelections: serviceSelections,\n    setServiceSelections: setServiceSelections,\n    region: region,\n    setRegion: setRegion,\n    getServiceOptions: getServiceOptions,\n    expandSearch: expandSearch,\n    setExpandSearch: setExpandSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Experience, {\n    currentExperience: mediaSelected,\n    watch: watch,\n    listen: listen,\n    searchQuery: searchQuery,\n    getOverlayData: getOverlayData,\n    getOverlayServices: getOverlayServices,\n    overlayServices: overlayServices,\n    getWatchScore: getWatchScore,\n    getTVEpScores: getTVEpScores,\n    getListenLink: getListenLink,\n    listenCategoryData: listenCategoryData,\n    setListenCategoryData: setListenCategoryData,\n    getListenCatPlaylist: getListenCatPlaylist,\n    selectedCat: selectedCat,\n    setSelectedCat: setSelectedCat,\n    setSearchQuery: setSearchQuery,\n    getWatchData: getWatchData,\n    getWatchFilteredData: getWatchFilteredData,\n    movieGenreOptions: MOVIE_GENRES[\"items\"],\n    tvGenreOptions: TV_GENRES[\"items\"],\n    movGenresSelected: movGenresSelected,\n    setMovGenresSelected: setMovGenresSelected,\n    tvGenresSelected: tvGenresSelected,\n    setTVGenresSelected: setTVGenresSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BackToTop, {\n    showAt: 100,\n    speed: 1000,\n    easing: \"easeInOutSine\",\n    children: /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://img.icons8.com/ios/96/000000/up.png\",\n      alt: \"top\",\n      className: \"top-arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/AppBody.js"],"names":["React","useState","Experience","SearchBar","MediaSelector","OPTIONS","SEARCHTEXT","TV_GENRES","MOVIE_GENRES","BackToTop","isDark","AppBody","mediaSelected","onMediaChange","watch","listen","onSearchQuery","getWatchData","getListenData","getWatchFilteredData","setSearchQuery","searchQuery","getOverlayData","serviceOptions","setServiceOptions","serviceSelections","setServiceSelections","region","setRegion","getServiceOptions","getOverlayServices","overlayServices","getWatchScore","getTVEpScores","getListenLink","listenCategoryData","setListenCategoryData","getListenCatPlaylist","selectedCat","setSelectedCat","filterSelected","setFilterSelected","movGenresSelected","setMovGenresSelected","tvGenresSelected","setTVGenresSelected","expandSearch","setExpandSearch","element","document","body","classList","toggle","getElementById","innerHTML","console","log","map","option"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Experience } from \"./Experience\";\nimport { SearchBar } from \"./SearchBar\";\nimport { MediaSelector } from \"./MediaSelector\";\nimport { OPTIONS, SEARCHTEXT, TV_GENRES, MOVIE_GENRES } from \"../constants\";\nimport BackToTop from \"react-back-to-top-button\";\n\nvar isDark = false;\n\nexport const AppBody = ({\n  mediaSelected,\n  onMediaChange,\n  watch,\n  listen,\n  onSearchQuery,\n  getWatchData,\n  getListenData,\n  getWatchFilteredData,\n  setSearchQuery,\n  searchQuery,\n  getOverlayData,\n  serviceOptions,\n  setServiceOptions,\n  serviceSelections,\n  setServiceSelections,\n  region,\n  setRegion,\n  getServiceOptions,\n  getOverlayServices,\n  overlayServices,\n  getWatchScore,\n  getTVEpScores,\n  getListenLink,\n  listenCategoryData,\n  setListenCategoryData,\n  getListenCatPlaylist,\n  selectedCat,\n  setSelectedCat,\n  filterSelected,\n  setFilterSelected,\n  movGenresSelected,\n  setMovGenresSelected,\n  tvGenresSelected,\n  setTVGenresSelected,\n}) => {\n  const [expandSearch, setExpandSearch] = useState(false);\n  return (\n    <section className=\"App-media-options\">\n      <button\n        className=\"color-mode\"\n        onClick={() => {\n          var element = document.body;\n          element.classList.toggle(\"dark-mode\");\n          isDark = !isDark;\n          document.getElementById(\"color-mode-img\").innerHTML = isDark\n            ? \"<img class='light-mode-vector' src='https://img.icons8.com/android/48/000000/sun.png' alt='light-mode'/>\"\n            : \"<img class='dark-mode-vector' src='https://img.icons8.com/ios/50/000000/crescent-moon.png' alt='dark-mode'/>\";\n        }}\n      >\n        <span id=\"color-mode-img\">\n          <img\n            className=\"dark-mode-vector\"\n            src=\"https://img.icons8.com/ios/50/000000/crescent-moon.png\"\n            alt=\"dark-mode\"\n          />\n        </span>\n      </button>\n      <div\n        className=\"filters-header\"\n        tabIndex=\"0\"\n        onBlur={() => {\n          console.log(\"you just clicked out of the filters header\");\n          setExpandSearch(false);\n        }}\n      >\n        <div className=\"media-selection\">\n          <p className=\"selection-label\">I want to</p>\n          {OPTIONS.map((option) => (\n            <MediaSelector\n              key={option}\n              option={option}\n              isSelected={mediaSelected === option}\n              onClick={(option) => {\n                onMediaChange(option);\n              }}\n            />\n          ))}\n        </div>\n        {/* <div className=\"region-selector\">Region: AU</div> */}\n        <SearchBar\n          name=\"searchbar\"\n          inputname=\"searchinput\"\n          imagename=\"searchbutton\"\n          placeholder={SEARCHTEXT[mediaSelected]}\n          onSearchQuery={onSearchQuery}\n          searchQuery={searchQuery}\n          original={watch}\n          getWatchData={getWatchData}\n          getListenData={getListenData}\n          setSearchQuery={setSearchQuery}\n          mediaSelected={mediaSelected}\n          setServiceOptions={setServiceOptions}\n          serviceOptions={serviceOptions}\n          serviceSelections={serviceSelections}\n          setServiceSelections={setServiceSelections}\n          region={region}\n          setRegion={setRegion}\n          getServiceOptions={getServiceOptions}\n          expandSearch={expandSearch}\n          setExpandSearch={setExpandSearch}\n        />\n      </div>\n      <Experience\n        currentExperience={mediaSelected}\n        watch={watch}\n        listen={listen}\n        searchQuery={searchQuery}\n        getOverlayData={getOverlayData}\n        getOverlayServices={getOverlayServices}\n        overlayServices={overlayServices}\n        getWatchScore={getWatchScore}\n        getTVEpScores={getTVEpScores}\n        getListenLink={getListenLink}\n        listenCategoryData={listenCategoryData}\n        setListenCategoryData={setListenCategoryData}\n        getListenCatPlaylist={getListenCatPlaylist}\n        selectedCat={selectedCat}\n        setSelectedCat={setSelectedCat}\n        setSearchQuery={setSearchQuery}\n        getWatchData={getWatchData}\n        getWatchFilteredData={getWatchFilteredData}\n        movieGenreOptions={MOVIE_GENRES[\"items\"]}\n        tvGenreOptions={TV_GENRES[\"items\"]}\n        movGenresSelected={movGenresSelected}\n        setMovGenresSelected={setMovGenresSelected}\n        tvGenresSelected={tvGenresSelected}\n        setTVGenresSelected={setTVGenresSelected}\n      />\n      <BackToTop\n        showAt={100}\n        speed={1000}\n        easing=\"easeInOutSine\"\n        children={\n          <img\n            src=\"https://img.icons8.com/ios/96/000000/up.png\"\n            alt=\"top\"\n            className=\"top-arrow\"\n          />\n        }\n      />\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}