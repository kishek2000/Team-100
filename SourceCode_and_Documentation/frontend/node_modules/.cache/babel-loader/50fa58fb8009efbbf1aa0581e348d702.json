{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/WatchExperience.js\";\nimport React from \"react\";\nimport { MediaCategoryList } from \"./MediaCategoryList\";\nimport { MediaGenreList } from \"./MediaGenreList\";\nimport { WATCH_GENRES } from \"../constants\"; // This function will give us the complete watch experience!\n\nexport function WatchExperience({\n  watch,\n  searchQuery\n}) {\n  const {\n    data\n  } = watch;\n  console.log(\"the current watch data looks like:\");\n  console.table(data);\n\n  if (data !== undefined) {\n    console.log(\"searchquery that is seen is \" + searchQuery);\n\n    if (searchQuery.length > 0) {\n      console.log(\"about to render the following data:\");\n      console.table(data);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-results\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-results-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }, \"Search Results for \", searchQuery), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"watch-experience-lists\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"TV Results\",\n        media: \"WATCH\",\n        mediaContent: data[`Search Results for ${searchQuery}`][\"TV Results\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"Movie Results\",\n        media: \"WATCH\",\n        mediaContent: data[`Search Results for ${searchQuery}`][\"Movie Results\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"watch-experience-lists\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"Trending Daily\",\n        media: \"WATCH\",\n        mediaContent: data[\"Trending Daily\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"Top Rated TV Shows\",\n        media: \"WATCH\",\n        mediaContent: data[\"Top Rated TV Shows\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"Now Airing TV Shows\",\n        media: \"WATCH\",\n        mediaContent: data[\"Now Airing TV Shows\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"Top Rated Movies\",\n        media: \"WATCH\",\n        mediaContent: data[\"Top Rated Movies\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(MediaGenreList, {\n        media: \"WATCH\",\n        genres: WATCH_GENRES,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }));\n    }\n  } // TODO: add loading state\n\n\n  return null;\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/WatchExperience.js"],"names":["React","MediaCategoryList","MediaGenreList","WATCH_GENRES","WatchExperience","watch","searchQuery","data","console","log","table","undefined","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,cAA7B,C,CAEA;;AACA,OAAO,SAASC,eAAT,CAAyB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAzB,EAAiD;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAAWF,KAAjB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAD,EAAAA,OAAO,CAACE,KAAR,CAAcH,IAAd;;AACA,MAAIA,IAAI,KAAKI,SAAb,EAAwB;AACtBH,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCH,WAA7C;;AACA,QAAIA,WAAW,CAACM,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BJ,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAD,MAAAA,OAAO,CAACE,KAAR,CAAcH,IAAd;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACsBD,WADtB,CADF,eAIE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,iBAAD;AACE,QAAA,QAAQ,EAAC,YADX;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,YAAY,EACVC,IAAI,CAAE,sBAAqBD,WAAY,EAAnC,CAAJ,CAA0C,YAA1C,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAQE,oBAAC,iBAAD;AACE,QAAA,QAAQ,EAAC,eADX;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,YAAY,EACVC,IAAI,CAAE,sBAAqBD,WAAY,EAAnC,CAAJ,CAA0C,eAA1C,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CAJF,CADF;AAuBD,KA1BD,MA0BO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,iBAAD;AACE,QAAA,QAAQ,EAAC,gBADX;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,YAAY,EAAEC,IAAI,CAAC,gBAAD,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAME,oBAAC,iBAAD;AACE,QAAA,QAAQ,EAAC,oBADX;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,YAAY,EAAEA,IAAI,CAAC,oBAAD,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,eAWE,oBAAC,iBAAD;AACE,QAAA,QAAQ,EAAC,qBADX;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,YAAY,EAAEA,IAAI,CAAC,qBAAD,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,eAgBE,oBAAC,iBAAD;AACE,QAAA,QAAQ,EAAC,kBADX;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,YAAY,EAAEA,IAAI,CAAC,kBAAD,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,eAqBE,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,OAAtB;AAA8B,QAAA,MAAM,EAAEJ,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,CADF;AAyBD;AACF,GA3DqD,CA4DtD;;;AACA,SAAO,IAAP;AACD","sourcesContent":["import React from \"react\";\nimport { MediaCategoryList } from \"./MediaCategoryList\";\nimport { MediaGenreList } from \"./MediaGenreList\";\nimport { WATCH_GENRES } from \"../constants\";\n\n// This function will give us the complete watch experience!\nexport function WatchExperience({ watch, searchQuery }) {\n  const { data } = watch;\n  console.log(\"the current watch data looks like:\");\n  console.table(data);\n  if (data !== undefined) {\n    console.log(\"searchquery that is seen is \" + searchQuery);\n    if (searchQuery.length > 0) {\n      console.log(\"about to render the following data:\");\n      console.table(data);\n      return (\n        <div className=\"search-results\">\n          <div className=\"search-results-title\">\n            Search Results for {searchQuery}\n          </div>\n          <div className=\"watch-experience-lists\">\n            <MediaCategoryList\n              category=\"TV Results\"\n              media=\"WATCH\"\n              mediaContent={\n                data[`Search Results for ${searchQuery}`][\"TV Results\"]\n              }\n            />\n            <MediaCategoryList\n              category=\"Movie Results\"\n              media=\"WATCH\"\n              mediaContent={\n                data[`Search Results for ${searchQuery}`][\"Movie Results\"]\n              }\n            />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"watch-experience-lists\">\n          <MediaCategoryList\n            category=\"Trending Daily\"\n            media=\"WATCH\"\n            mediaContent={data[\"Trending Daily\"]}\n          />\n          <MediaCategoryList\n            category=\"Top Rated TV Shows\"\n            media=\"WATCH\"\n            mediaContent={data[\"Top Rated TV Shows\"]}\n          />\n          <MediaCategoryList\n            category=\"Now Airing TV Shows\"\n            media=\"WATCH\"\n            mediaContent={data[\"Now Airing TV Shows\"]}\n          />\n          <MediaCategoryList\n            category=\"Top Rated Movies\"\n            media=\"WATCH\"\n            mediaContent={data[\"Top Rated Movies\"]}\n          />\n          <MediaGenreList media=\"WATCH\" genres={WATCH_GENRES} />\n        </div>\n      );\n    }\n  }\n  // TODO: add loading state\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}