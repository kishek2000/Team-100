{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/ListenExperience.js\";\nimport React from \"react\";\nimport { MediaCategoryList } from \"./MediaCategoryList\";\nimport LoadingSpinner from \"../images/tail-spin.svg\";\nimport { Dropdown } from \"./Dropdown\";\nimport { LISTENCATEGORIES } from \"../constants/index\"; // This function will give us the complete Listen experience!\n\nexport function ListenExperience({\n  listen,\n  searchQuery,\n  getOverlayData,\n  getListenLink,\n  listenCategoryData,\n  getListenCatPlaylist,\n  selectedCat,\n  setSelectedCat\n}) {\n  const {\n    data\n  } = listen;\n\n  if (Object.keys(data).length > 0) {\n    if (searchQuery.length > 0 && !data[\"Search Results\"]) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading-screen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }, \"LOADING SEARCH RESULTS...\"), /*#__PURE__*/React.createElement(\"img\", {\n        src: LoadingSpinner,\n        alt: \"load\",\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }));\n    } else if (searchQuery.length === 0 && data[\"Search Results\"]) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading-screen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, \"LOADING LISTEN ITEMS...\"), /*#__PURE__*/React.createElement(\"img\", {\n        src: LoadingSpinner,\n        alt: \"load\",\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }));\n    } else if (searchQuery.length > 0 && data[\"Search Results\"]) {\n      const album_matches = data[\"Search Results\"][\"Album Results\"];\n      const track_matches = data[\"Search Results\"][\"Track Results\"];\n      const podcast_matches = data[\"Search Results\"][\"Podcast Results\"];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-results\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, album_matches.length > 0 || track_matches.length > 0 || podcast_matches.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-results-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, \"Search Results for \", searchQuery), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-listen-lists\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"Album, Single and Compilation Results\",\n        media: \"LISTEN\",\n        type: \"Track\",\n        mediaContent: album_matches,\n        getOverlayData: getOverlayData,\n        getListenLink: getListenLink,\n        num: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"Track Results\",\n        media: \"LISTEN\",\n        type: \"Album\",\n        mediaContent: track_matches,\n        getOverlayData: getOverlayData,\n        getListenLink: getListenLink,\n        num: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"Podcast Results\",\n        type: \"Podcast\",\n        media: \"LISTEN\",\n        mediaContent: podcast_matches,\n        getOverlayData: getOverlayData,\n        getListenLink: getListenLink,\n        num: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"category-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, \"Sorry! No results were found.\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"listen-experience-lists\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"New Releases\",\n        media: \"LISTEN\",\n        mediaContent: data[\"New Releases\"],\n        getOverlayData: getOverlayData,\n        getListenLink: getListenLink,\n        num: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"Featured Playlists\",\n        media: \"LISTEN\",\n        type: \"Playlist\",\n        mediaContent: data[\"Featured Playlists\"],\n        getOverlayData: getOverlayData,\n        getListenLink: getListenLink,\n        num: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"listen-categories\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListenCategoryPlaylists, {\n        listenCategoryData: listenCategoryData,\n        getOverlayData: getOverlayData,\n        getListenLink: getListenLink,\n        currentCat: selectedCat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown, {\n        options: LISTENCATEGORIES[\"items\"],\n        getData: getListenCatPlaylist,\n        setSelection: setSelectedCat,\n        class: \"listen-category-playlists\",\n        default: {\n          value: selectedCat[\"value\"],\n          label: selectedCat[\"label\"]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      })));\n    }\n  } else {\n    // TODO: add loading state\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, \"LOADING LISTEN ITEMS...\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: LoadingSpinner,\n      alt: \"load\",\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nfunction ListenCategoryPlaylists({\n  listenCategoryData,\n  getOverlayData,\n  getListenLink,\n  currentCat\n}) {\n  if (Object.keys(listenCategoryData).length > 0) {\n    var category = \"\";\n\n    if (typeof currentCat !== \"string\") {\n      category = currentCat[\"label\"];\n    } else {\n      category = currentCat;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MediaCategoryList, {\n      category: `${category} Playlists`,\n      media: \"LISTEN\",\n      type: \"Playlist\",\n      mediaContent: listenCategoryData,\n      getOverlayData: getOverlayData,\n      getListenLink: getListenLink,\n      num: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/ListenExperience.js"],"names":["React","MediaCategoryList","Dropdown","LISTENCATEGORIES","ListenExperience","listen","searchQuery","getOverlayData","getListenLink","listenCategoryData","getListenCatPlaylist","selectedCat","setSelectedCat","data","Object","keys","length","LoadingSpinner","album_matches","track_matches","podcast_matches","value","label","ListenCategoryPlaylists","currentCat","category"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { MediaCategoryList } from \"./MediaCategoryList\";\nimport LoadingSpinner from \"../images/tail-spin.svg\";\nimport { Dropdown } from \"./Dropdown\";\nimport { LISTENCATEGORIES } from \"../constants/index\";\n\n// This function will give us the complete Listen experience!\nexport function ListenExperience({\n  listen,\n  searchQuery,\n  getOverlayData,\n  getListenLink,\n  listenCategoryData,\n  getListenCatPlaylist,\n  selectedCat,\n  setSelectedCat,\n}) {\n  const { data } = listen;\n  if (Object.keys(data).length > 0) {\n    if (searchQuery.length > 0 && !data[\"Search Results\"]) {\n      return (\n        <div className=\"loading-screen\">\n          <div className=\"loading-text\">LOADING SEARCH RESULTS...</div>\n          <img src={LoadingSpinner} alt=\"load\" className=\"loader\" />\n        </div>\n      );\n    } else if (searchQuery.length === 0 && data[\"Search Results\"]) {\n      return (\n        <div className=\"loading-screen\">\n          <div className=\"loading-text\">LOADING LISTEN ITEMS...</div>\n          <img src={LoadingSpinner} alt=\"load\" className=\"loader\" />\n        </div>\n      );\n    } else if (searchQuery.length > 0 && data[\"Search Results\"]) {\n      const album_matches = data[\"Search Results\"][\"Album Results\"];\n      const track_matches = data[\"Search Results\"][\"Track Results\"];\n      const podcast_matches = data[\"Search Results\"][\"Podcast Results\"];\n      return (\n        <div className=\"search-results\">\n          {album_matches.length > 0 ||\n          track_matches.length > 0 ||\n          podcast_matches.length > 0 ? (\n            <div>\n              <div className=\"search-results-title\">\n                Search Results for {searchQuery}\n              </div>\n              <div className=\"search-listen-lists\">\n                <MediaCategoryList\n                  category=\"Album, Single and Compilation Results\"\n                  media=\"LISTEN\"\n                  type=\"Track\"\n                  mediaContent={album_matches}\n                  getOverlayData={getOverlayData}\n                  getListenLink={getListenLink}\n                  num=\"0\"\n                />\n                <MediaCategoryList\n                  category=\"Track Results\"\n                  media=\"LISTEN\"\n                  type=\"Album\"\n                  mediaContent={track_matches}\n                  getOverlayData={getOverlayData}\n                  getListenLink={getListenLink}\n                  num=\"1\"\n                />\n                <MediaCategoryList\n                  category=\"Podcast Results\"\n                  type=\"Podcast\"\n                  media=\"LISTEN\"\n                  mediaContent={podcast_matches}\n                  getOverlayData={getOverlayData}\n                  getListenLink={getListenLink}\n                  num=\"2\"\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"category-title\">Sorry! No results were found.</div>\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"listen-experience-lists\">\n          <MediaCategoryList\n            category=\"New Releases\"\n            media=\"LISTEN\"\n            mediaContent={data[\"New Releases\"]}\n            getOverlayData={getOverlayData}\n            getListenLink={getListenLink}\n            num=\"0\"\n          />\n          <MediaCategoryList\n            category=\"Featured Playlists\"\n            media=\"LISTEN\"\n            type=\"Playlist\"\n            mediaContent={data[\"Featured Playlists\"]}\n            getOverlayData={getOverlayData}\n            getListenLink={getListenLink}\n            num=\"1\"\n          />\n          <div className=\"listen-categories\">\n            <ListenCategoryPlaylists\n              listenCategoryData={listenCategoryData}\n              getOverlayData={getOverlayData}\n              getListenLink={getListenLink}\n              currentCat={selectedCat}\n            />\n            <Dropdown\n              options={LISTENCATEGORIES[\"items\"]}\n              getData={getListenCatPlaylist}\n              setSelection={setSelectedCat}\n              class=\"listen-category-playlists\"\n              default={{\n                value: selectedCat[\"value\"],\n                label: selectedCat[\"label\"],\n              }}\n            />\n          </div>\n        </div>\n      );\n    }\n  } else {\n    // TODO: add loading state\n    return (\n      <div className=\"loading-screen\">\n        <div className=\"loading-text\">LOADING LISTEN ITEMS...</div>\n        <img src={LoadingSpinner} alt=\"load\" className=\"loader\" />\n      </div>\n    );\n  }\n}\n\nfunction ListenCategoryPlaylists({\n  listenCategoryData,\n  getOverlayData,\n  getListenLink,\n  currentCat,\n}) {\n  if (Object.keys(listenCategoryData).length > 0) {\n    var category = \"\";\n    if (typeof currentCat !== \"string\") {\n      category = currentCat[\"label\"];\n    } else {\n      category = currentCat;\n    }\n    return (\n      <div>\n        <MediaCategoryList\n          category={`${category} Playlists`}\n          media=\"LISTEN\"\n          type=\"Playlist\"\n          mediaContent={listenCategoryData}\n          getOverlayData={getOverlayData}\n          getListenLink={getListenLink}\n          num=\"2\"\n        />\n      </div>\n    );\n  }\n  return <div></div>;\n}\n"]},"metadata":{},"sourceType":"module"}