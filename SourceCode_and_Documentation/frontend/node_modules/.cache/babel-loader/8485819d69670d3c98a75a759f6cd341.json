{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/App.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\nimport { AppHeader } from \"./components/AppHeader\";\nimport { AppBody } from \"./components/AppBody\";\nimport { Client } from \"./client\"; // Instantiate a single instance of the Client, used across\n// the application for fetching of data.\n\nconst client = new Client(\"http://127.0.0.1:8000\");\n\nfunction App() {\n  const [mediaSelected, setMediaSelected] = useState(\"WATCH\");\n  const [appState, setAppState] = useState({});\n  const getWatchData = useCallback(async () => {\n    const data = await client.getWatchData();\n    setAppState({ ...appState,\n      watchData: data\n    });\n  }, [appState, setAppState, client]);\n  const getListenData = useCallback(async () => {\n    const data = await client.getListenData();\n    setAppState({ ...appState,\n      listenData: data\n    });\n  }, [appState, setAppState, client]);\n  useEffect(() => {\n    if (mediaSelected === \"WATCH\") {\n      getWatchData();\n    } else {\n      getListenData();\n    }\n  }, [mediaSelected, getWatchData, getListenData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppBody, {\n    mediaSelected: mediaSelected,\n    onMediaChange: setMediaSelected,\n    watch: {\n      data: appState.watchData,\n      fetch: getWatchData\n    },\n    listen: {\n      data: appState.listenData,\n      fetch: getListenData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/App.js"],"names":["React","useState","useEffect","useCallback","AppHeader","AppBody","Client","client","App","mediaSelected","setMediaSelected","appState","setAppState","getWatchData","data","watchData","getListenData","listenData","fetch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAO,WAAP;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,OAAT,QAAwB,sBAAxB;AAEA,SAASC,MAAT,QAAuB,UAAvB,C,CAEA;AACA;;AACA,MAAMC,MAAM,GAAG,IAAID,MAAJ,CAAW,uBAAX,CAAf;;AAEA,SAASE,GAAT,GAAe;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,OAAD,CAAlD;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMY,YAAY,GAAGV,WAAW,CAAC,YAAY;AAC3C,UAAMW,IAAI,GAAG,MAAMP,MAAM,CAACM,YAAP,EAAnB;AACAD,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeI,MAAAA,SAAS,EAAED;AAA1B,KAAD,CAAX;AACD,GAH+B,EAG7B,CAACH,QAAD,EAAWC,WAAX,EAAwBL,MAAxB,CAH6B,CAAhC;AAKA,QAAMS,aAAa,GAAGb,WAAW,CAAC,YAAY;AAC5C,UAAMW,IAAI,GAAG,MAAMP,MAAM,CAACS,aAAP,EAAnB;AACAJ,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeM,MAAAA,UAAU,EAAEH;AAA3B,KAAD,CAAX;AACD,GAHgC,EAG9B,CAACH,QAAD,EAAWC,WAAX,EAAwBL,MAAxB,CAH8B,CAAjC;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,aAAa,KAAK,OAAtB,EAA+B;AAC7BI,MAAAA,YAAY;AACb,KAFD,MAEO;AACLG,MAAAA,aAAa;AACd;AACF,GANQ,EAMN,CAACP,aAAD,EAAgBI,YAAhB,EAA8BG,aAA9B,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AACE,IAAA,aAAa,EAAEP,aADjB;AAEE,IAAA,aAAa,EAAEC,gBAFjB;AAGE,IAAA,KAAK,EAAE;AAAEI,MAAAA,IAAI,EAAEH,QAAQ,CAACI,SAAjB;AAA4BG,MAAAA,KAAK,EAAEL;AAAnC,KAHT;AAIE,IAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAEH,QAAQ,CAACM,UAAjB;AAA6BC,MAAAA,KAAK,EAAEF;AAApC,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAWD;;AAED,eAAeR,GAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\n\nimport { AppHeader } from \"./components/AppHeader\";\nimport { AppBody } from \"./components/AppBody\";\n\nimport { Client } from \"./client\";\n\n// Instantiate a single instance of the Client, used across\n// the application for fetching of data.\nconst client = new Client(\"http://127.0.0.1:8000\");\n\nfunction App() {\n  const [mediaSelected, setMediaSelected] = useState(\"WATCH\");\n  const [appState, setAppState] = useState({});\n\n  const getWatchData = useCallback(async () => {\n    const data = await client.getWatchData();\n    setAppState({ ...appState, watchData: data });\n  }, [appState, setAppState, client]);\n\n  const getListenData = useCallback(async () => {\n    const data = await client.getListenData();\n    setAppState({ ...appState, listenData: data });\n  }, [appState, setAppState, client]);\n\n  useEffect(() => {\n    if (mediaSelected === \"WATCH\") {\n      getWatchData();\n    } else {\n      getListenData();\n    }\n  }, [mediaSelected, getWatchData, getListenData]);\n\n  return (\n    <div className=\"App\">\n      <AppHeader />\n      <AppBody\n        mediaSelected={mediaSelected}\n        onMediaChange={setMediaSelected}\n        watch={{ data: appState.watchData, fetch: getWatchData }}\n        listen={{ data: appState.listenData, fetch: getListenData }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}