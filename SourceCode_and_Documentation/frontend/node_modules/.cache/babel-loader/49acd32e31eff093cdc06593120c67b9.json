{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lje61\\\\Desktop\\\\Repo\\\\Team-100\\\\SourceCode_and_Documentation\\\\frontend\\\\src\\\\view\\\\WatchMedia.js\";\nimport React from \"react\";\nimport { ScrollList } from \"./ScrollList\";\n\nfunction WatchMediaMetadata({\n  airDate,\n  language,\n  rating\n}) {\n  return [airDate, language, rating].filter(item => !!item).join(\" | \");\n}\n\nexport function WatchMedia({\n  category,\n  content,\n  getOverlayData,\n  setOpenOverlayCategory\n}) {\n  if (content !== undefined) {\n    const contentStart = content.slice(0, 14);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"category-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, category), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-media\",\n      id: \"category-media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"prev\",\n      onClick: () => {\n        document.getElementById(\"category-media\").scrollLeft -= 100;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"next\",\n      onClick: () => {\n        document.getElementById(\"category-media\").scrollLeft += 100;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), contentStart.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"media-template\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"media-image-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"media-user-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"user-score-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }\n    }, Math.round(item[\"score\"] * 1000) / 10, \"%\")), /*#__PURE__*/React.createElement(\"img\", {\n      index: index,\n      src: item[\"imgURL\"],\n      className: \"media-image\",\n      alt: \"media\",\n      onClick: () => {\n        getOverlayData(item[\"id\"], item[\"type\"]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"watch-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, item[\"name\"]), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"watch-metadata\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(WatchMediaMetadata, {\n      airDate: item[\"first_air_date\"],\n      language: item[\"lang\"],\n      rating: item[\"content_rating\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }))))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":{"version":3,"sources":["C:/Users/lje61/Desktop/Repo/Team-100/SourceCode_and_Documentation/frontend/src/view/WatchMedia.js"],"names":["React","ScrollList","WatchMediaMetadata","airDate","language","rating","filter","item","join","WatchMedia","category","content","getOverlayData","setOpenOverlayCategory","undefined","contentStart","slice","document","getElementById","scrollLeft","map","index","Math","round"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAA5B,EAA2D;AACzD,SAAO,CAACF,OAAD,EAAUC,QAAV,EAAoBC,MAApB,EAA4BC,MAA5B,CAAoCC,IAAD,IAAU,CAAC,CAACA,IAA/C,EAAqDC,IAArD,CAA0D,KAA1D,CAAP;AACD;;AAED,OAAO,SAASC,UAAT,CAAoB;AACzBC,EAAAA,QADyB;AAEzBC,EAAAA,OAFyB;AAGzBC,EAAAA,cAHyB;AAIzBC,EAAAA;AAJyB,CAApB,EAKJ;AACD,MAAIF,OAAO,KAAKG,SAAhB,EAA2B;AACzB,UAAMC,YAAY,GAAGJ,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiB,EAAjB,CAArB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BN,QAA/B,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,EAAE,EAAC,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAG,MAApB;AAA2B,MAAA,OAAO,EAAG,MAAK;AACxCO,QAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,UAA1C,IAAsD,GAAtD;AACC,OAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAQ,MAAA,SAAS,EAAG,MAApB;AAA2B,MAAA,OAAO,EAAG,MAAK;AACxCF,QAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,UAA1C,IAAsD,GAAtD;AACD,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EASGJ,YAAY,CAACK,GAAb,CAAiB,CAACb,IAAD,EAAOc,KAAP,kBAChB;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,IAAI,CAACC,KAAL,CAAWhB,IAAI,CAAC,OAAD,CAAJ,GAAgB,IAA3B,IAAmC,EADtC,MADF,CADF,eAME;AACE,MAAA,KAAK,EAAEc,KADT;AAEE,MAAA,GAAG,EAAEd,IAAI,CAAC,QAAD,CAFX;AAGE,MAAA,SAAS,EAAC,aAHZ;AAIE,MAAA,GAAG,EAAC,OAJN;AAKE,MAAA,OAAO,EAAE,MAAM;AACbK,QAAAA,cAAc,CAACL,IAAI,CAAC,IAAD,CAAL,EAAaA,IAAI,CAAC,MAAD,CAAjB,CAAd;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,eAiBE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,IAAI,CAAC,MAAD,CAAhC,CAjBF,eAkBE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,kBAAD;AACE,MAAA,OAAO,EAAEA,IAAI,CAAC,gBAAD,CADf;AAEE,MAAA,QAAQ,EAAEA,IAAI,CAAC,MAAD,CAFhB;AAGE,MAAA,MAAM,EAAEA,IAAI,CAAC,gBAAD,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlBF,CADD,CATH,CAFF,CADF;AA2CD,GA7CD,MA6CO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF","sourcesContent":["import React from \"react\";\r\nimport { ScrollList } from \"./ScrollList\";\r\n\r\nfunction WatchMediaMetadata({ airDate, language, rating }) {\r\n  return [airDate, language, rating].filter((item) => !!item).join(\" | \");\r\n}\r\n\r\nexport function WatchMedia({\r\n  category,\r\n  content,\r\n  getOverlayData,\r\n  setOpenOverlayCategory,\r\n}) {\r\n  if (content !== undefined) {\r\n    const contentStart = content.slice(0, 14);\r\n    return (\r\n      <div className=\"category-list\">\r\n        <p className=\"category-title\">{category}</p>\r\n        <div className=\"category-media\" id=\"category-media\">\r\n          <button className = \"prev\" onClick= {() =>{\r\n            document.getElementById(\"category-media\").scrollLeft-=100;\r\n            }}\r\n          />\r\n          <button className = \"next\" onClick= {() =>{\r\n            document.getElementById(\"category-media\").scrollLeft+=100;\r\n          }}\r\n        />\r\n          {contentStart.map((item, index) => (\r\n            <div className=\"media-template\">\r\n              <div className=\"media-image-wrapper\">\r\n                <div className=\"media-user-score\">\r\n                  <span className=\"user-score-text\">\r\n                    {Math.round(item[\"score\"] * 1000) / 10}%\r\n                  </span>\r\n                </div>\r\n                <img\r\n                  index={index}\r\n                  src={item[\"imgURL\"]}\r\n                  className=\"media-image\"\r\n                  alt=\"media\"\r\n                  onClick={() => {\r\n                    getOverlayData(item[\"id\"], item[\"type\"]);\r\n                  }}\r\n                />\r\n              </div>\r\n              <p className=\"watch-title\">{item[\"name\"]}</p>\r\n              <div className=\"watch-metadata\">\r\n                <WatchMediaMetadata\r\n                  airDate={item[\"first_air_date\"]}\r\n                  language={item[\"lang\"]}\r\n                  rating={item[\"content_rating\"]}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}