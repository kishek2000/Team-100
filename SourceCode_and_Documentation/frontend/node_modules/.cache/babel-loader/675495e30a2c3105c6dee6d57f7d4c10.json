{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/AppContainer.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { App } from \"./App\";\n\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loaded: false,\n      placeholder: \"Loading\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"api/home/\").then(response => {\n      if (response.status > 400) {\n        return this.setState(() => {\n          return {\n            placeholder: \"Something went wrong!\"\n          };\n        });\n      }\n\n      return response.json();\n    }).then(data => {\n      this.setState(() => {\n        return {\n          data,\n          loaded: true\n        };\n      });\n    });\n  }\n\n  render() {\n    if (this.state.data.watch_data !== undefined) {\n      console.log(`This is our data now: ${JSON.stringify // this.state.data.watch_data[0][\"Now Airing TV Shows\"][0]\n      ()}`);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(App, {\n      watchExperienceData: this.state.data.watch_data,\n      listenExperienceData: this.state.data.listen_data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default AppContainer;\nconst container = document.getElementById(\"app\");\nrender( /*#__PURE__*/React.createElement(AppContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 8\n  }\n}), container);","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/AppContainer.js"],"names":["React","Component","render","App","AppContainer","constructor","props","state","data","loaded","placeholder","componentDidMount","fetch","then","response","status","setState","json","watch_data","undefined","console","log","JSON","stringify","listen_data","container","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,GAAT,QAAoB,OAApB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACnCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,MAAM,EAAE,KAFG;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,WAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,MAAT,GAAkB,GAAtB,EAA2B;AACzB,eAAO,KAAKC,QAAL,CAAc,MAAM;AACzB,iBAAO;AAAEN,YAAAA,WAAW,EAAE;AAAf,WAAP;AACD,SAFM,CAAP;AAGD;;AACD,aAAOI,QAAQ,CAACG,IAAT,EAAP;AACD,KARH,EASGJ,IATH,CASQL,IAAI,IAAI;AACZ,WAAKQ,QAAL,CAAc,MAAM;AAClB,eAAO;AACLR,UAAAA,IADK;AAELC,UAAAA,MAAM,EAAE;AAFH,SAAP;AAID,OALD;AAMD,KAhBH;AAiBD;;AAEDP,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKK,KAAL,CAAWC,IAAX,CAAgBU,UAAhB,KAA+BC,SAAnC,EAA8C;AAC5CC,MAAAA,OAAO,CAACC,GAAR,CACG,yBAAwBC,IAAI,CAC1BC,SADsB,CAEvB;AAFuB,QAGpB,EAJP;AAMD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AACE,MAAA,mBAAmB,EAAE,KAAKhB,KAAL,CAAWC,IAAX,CAAgBU,UADvC;AAEE,MAAA,oBAAoB,EAAE,KAAKX,KAAL,CAAWC,IAAX,CAAgBgB,WAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAQD;;AA/CkC;;AAkDrC,eAAepB,YAAf;AAEA,MAAMqB,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAlB;AACAzB,MAAM,eAAC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAmBuB,SAAnB,CAAN","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { App } from \"./App\";\n\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loaded: false,\n      placeholder: \"Loading\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"api/home/\")\n      .then(response => {\n        if (response.status > 400) {\n          return this.setState(() => {\n            return { placeholder: \"Something went wrong!\" };\n          });\n        }\n        return response.json();\n      })\n      .then(data => {\n        this.setState(() => {\n          return {\n            data,\n            loaded: true\n          };\n        });\n      });\n  }\n\n  render() {\n    if (this.state.data.watch_data !== undefined) {\n      console.log(\n        `This is our data now: ${JSON\n          .stringify\n          // this.state.data.watch_data[0][\"Now Airing TV Shows\"][0]\n          ()}`\n      );\n    }\n    return (\n      <div>\n        <App\n          watchExperienceData={this.state.data.watch_data}\n          listenExperienceData={this.state.data.listen_data}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AppContainer;\n\nconst container = document.getElementById(\"app\");\nrender(<AppContainer />, container);\n"]},"metadata":{},"sourceType":"module"}