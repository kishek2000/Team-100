{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/Dropdown.js\";\nimport React from \"react\";\nimport Select from \"react-select\";\nexport class Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      if (this.state.selectedOption && this.props.getData) {\n        this.props.getData(this.state.selectedOption[\"value\"]);\n      }\n    };\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      }, () => {\n        console.log(\"selection is now: \", selectedOption);\n\n        if (selectedOption !== null && selectedOption.length > 0) {\n          if (selectedOption.length > 1) {\n            this.props.setData(selectedOption.map(function (stream) {\n              return stream[\"value\"];\n            }).join(\"&\"));\n          } else {\n            if (this.props.isMulti) {\n              this.props.setData(selectedOption[0][\"value\"]);\n            }\n          }\n        } else {\n          if (selectedOption === null) {\n            this.props.setData(selectedOption);\n          } else if (typeof selectedOption !== \"string\") {\n            if (this.props.setData) {\n              this.props.setData(selectedOption[\"value\"]);\n            }\n\n            if (this.props.setSelection && this.props.getData) {\n              this.props.getData(selectedOption[\"value\"]);\n              this.props.setSelection(selectedOption);\n            }\n          } else {\n            this.props.setData(selectedOption);\n          }\n        }\n      });\n    };\n\n    this.state = {\n      selectedOption: this.props.default\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    const {\n      selectedOption\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Select, {\n      value: selectedOption,\n      onChange: this.handleChange,\n      options: this.props.options,\n      className: this.props.class,\n      placeholder: this.props.placeholder,\n      isMulti: this.props.isMulti,\n      isSearchable: false,\n      const: true,\n      styles: this.props.styles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/Dropdown.js"],"names":["React","Select","Dropdown","Component","constructor","props","componentDidMount","state","selectedOption","getData","handleChange","setState","console","log","length","setData","map","stream","join","isMulti","setSelection","default","bind","render","options","class","placeholder","styles"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Select from \"react-select\";\n\nexport class Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: this.props.default,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount = () => {\n    if (this.state.selectedOption && this.props.getData) {\n      this.props.getData(this.state.selectedOption[\"value\"]);\n    }\n  };\n\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption }, () => {\n      console.log(\"selection is now: \", selectedOption);\n      if (selectedOption !== null && selectedOption.length > 0) {\n        if (selectedOption.length > 1) {\n          this.props.setData(\n            selectedOption\n              .map(function (stream) {\n                return stream[\"value\"];\n              })\n              .join(\"&\")\n          );\n        } else {\n          if (this.props.isMulti) {\n            this.props.setData(selectedOption[0][\"value\"]);\n          }\n        }\n      } else {\n        if (selectedOption === null) {\n          this.props.setData(selectedOption);\n        } else if (typeof selectedOption !== \"string\") {\n          if (this.props.setData) {\n            this.props.setData(selectedOption[\"value\"]);\n          }\n          if (this.props.setSelection && this.props.getData) {\n            this.props.getData(selectedOption[\"value\"]);\n            this.props.setSelection(selectedOption);\n          }\n        } else {\n          this.props.setData(selectedOption);\n        }\n      }\n    });\n  };\n  render() {\n    const { selectedOption } = this.state;\n    return (\n      <Select\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={this.props.options}\n        className={this.props.class}\n        placeholder={this.props.placeholder}\n        isMulti={this.props.isMulti}\n        isSearchable={false}\n        const\n        styles={this.props.styles}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}