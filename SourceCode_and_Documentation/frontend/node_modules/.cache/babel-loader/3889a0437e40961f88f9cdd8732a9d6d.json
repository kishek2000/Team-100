{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/App.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\nimport { AppHeader } from \"./components/AppHeader\";\nimport { AppBody } from \"./components/AppBody\";\nimport { Client } from \"./client\"; // Instantiate a single instance of the Client, used across\n// the application for fetching of data.\n\nconst client = new Client(\"http://127.0.0.1:8000\");\n\nfunction App() {\n  const [mediaSelected, setMediaSelected] = useState(\"WATCH\");\n  const [watchData, setWatchData] = useState({});\n  const [listenData, setListenData] = useState({});\n  const getWatchData = useCallback(() => {\n    client.getWatchData().then(data => setWatchData(data));\n  }, [appState, setAppState]);\n  const getListenData = useCallback(() => {\n    client.getListenData().then(data => setListenData(data));\n  }, [appState, setAppState]);\n  useEffect(() => {\n    if (mediaSelected === \"WATCH\") {\n      getWatchData();\n    } else {\n      getListenData();\n    }\n  }, [mediaSelected, getWatchData, getListenData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppBody, {\n    mediaSelected: mediaSelected,\n    onMediaChange: setMediaSelected,\n    watch: {\n      data: watchData,\n      fetch: getWatchData\n    },\n    listen: {\n      data: listenData,\n      fetch: getListenData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/App.js"],"names":["React","useState","useEffect","useCallback","AppHeader","AppBody","Client","client","App","mediaSelected","setMediaSelected","watchData","setWatchData","listenData","setListenData","getWatchData","then","data","appState","setAppState","getListenData","fetch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAO,WAAP;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,OAAT,QAAwB,sBAAxB;AAEA,SAASC,MAAT,QAAuB,UAAvB,C,CAEA;AACA;;AACA,MAAMC,MAAM,GAAG,IAAID,MAAJ,CAAW,uBAAX,CAAf;;AAEA,SAASE,GAAT,GAAe;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,OAAD,CAAlD;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMc,YAAY,GAAGZ,WAAW,CAAC,MAAM;AACrCI,IAAAA,MAAM,CAACQ,YAAP,GAAsBC,IAAtB,CAA2BC,IAAI,IAAIL,YAAY,CAACK,IAAD,CAA/C;AACD,GAF+B,EAE7B,CAACC,QAAD,EAAWC,WAAX,CAF6B,CAAhC;AAIA,QAAMC,aAAa,GAAGjB,WAAW,CAAC,MAAM;AACtCI,IAAAA,MAAM,CAACa,aAAP,GAAuBJ,IAAvB,CAA4BC,IAAI,IAAIH,aAAa,CAACG,IAAD,CAAjD;AACD,GAFgC,EAE9B,CAACC,QAAD,EAAWC,WAAX,CAF8B,CAAjC;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,aAAa,KAAK,OAAtB,EAA+B;AAC7BM,MAAAA,YAAY;AACb,KAFD,MAEO;AACLK,MAAAA,aAAa;AACd;AACF,GANQ,EAMN,CAACX,aAAD,EAAgBM,YAAhB,EAA8BK,aAA9B,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AACE,IAAA,aAAa,EAAEX,aADjB;AAEE,IAAA,aAAa,EAAEC,gBAFjB;AAGE,IAAA,KAAK,EAAE;AAAEO,MAAAA,IAAI,EAAEN,SAAR;AAAmBU,MAAAA,KAAK,EAAEN;AAA1B,KAHT;AAIE,IAAA,MAAM,EAAE;AAAEE,MAAAA,IAAI,EAAEJ,UAAR;AAAoBQ,MAAAA,KAAK,EAAED;AAA3B,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAWD;;AAED,eAAeZ,GAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\n\nimport { AppHeader } from \"./components/AppHeader\";\nimport { AppBody } from \"./components/AppBody\";\n\nimport { Client } from \"./client\";\n\n// Instantiate a single instance of the Client, used across\n// the application for fetching of data.\nconst client = new Client(\"http://127.0.0.1:8000\");\n\nfunction App() {\n  const [mediaSelected, setMediaSelected] = useState(\"WATCH\");\n  const [watchData, setWatchData] = useState({});\n  const [listenData, setListenData] = useState({});\n  const getWatchData = useCallback(() => {\n    client.getWatchData().then(data => setWatchData(data));\n  }, [appState, setAppState]);\n\n  const getListenData = useCallback(() => {\n    client.getListenData().then(data => setListenData(data));\n  }, [appState, setAppState]);\n\n  useEffect(() => {\n    if (mediaSelected === \"WATCH\") {\n      getWatchData();\n    } else {\n      getListenData();\n    }\n  }, [mediaSelected, getWatchData, getListenData]);\n\n  return (\n    <div className=\"App\">\n      <AppHeader />\n      <AppBody\n        mediaSelected={mediaSelected}\n        onMediaChange={setMediaSelected}\n        watch={{ data: watchData, fetch: getWatchData }}\n        listen={{ data: listenData, fetch: getListenData }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}