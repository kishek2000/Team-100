{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/AppBody.js\";\nimport React from \"react\";\nimport { Experience } from \"./Experience\";\nimport { SearchBar } from \"./SearchBar\";\nimport { MediaSelector } from \"./MediaSelector\";\nimport { OPTIONS, SEARCHTEXT } from \"../constants\";\nimport BackToTop from \"react-back-to-top-button\";\nvar isDark = false;\nexport const AppBody = ({\n  mediaSelected,\n  onMediaChange,\n  watch,\n  listen,\n  onSearchQuery,\n  getWatchData,\n  getListenData,\n  setSearchQuery,\n  searchQuery,\n  getOverlayData,\n  serviceOptions,\n  setServiceOptions,\n  serviceSelections,\n  setServiceSelections,\n  region,\n  setRegion,\n  getServiceOptions,\n  getOverlayServices,\n  overlayServices,\n  getWatchScore,\n  getTVEpScores,\n  getListenLink,\n  listenCategoryData,\n  setListenCategoryData,\n  getListenCatPlaylist,\n  selectedCat,\n  setSelectedCat\n}) => /*#__PURE__*/React.createElement(\"section\", {\n  className: \"App-media-options\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  className: \"color-mode\",\n  onClick: () => {\n    var element = document.body;\n    element.classList.toggle(\"dark-mode\");\n    isDark = !isDark;\n    document.getElementById(\"color-mode-img\").innerHTML = isDark ? \"<img class='light-mode-vector' src='https://img.icons8.com/android/48/000000/sun.png' alt='light-mode'/>\" : \"<img class='dark-mode-vector' src='https://img.icons8.com/ios/50/000000/crescent-moon.png' alt='dark-mode'/>\";\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  id: \"color-mode-img\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  className: \"dark-mode-vector\",\n  src: \"https://img.icons8.com/ios/50/000000/crescent-moon.png\",\n  alt: \"dark-mode\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"filters-header\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"media-selection\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: \"selection-label\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }\n}, \"I want to\"), OPTIONS.map(option => /*#__PURE__*/React.createElement(MediaSelector, {\n  key: option,\n  option: option,\n  isSelected: mediaSelected === option,\n  onClick: option => {\n    onMediaChange(option);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 11\n  }\n}))), /*#__PURE__*/React.createElement(SearchBar, {\n  name: \"searchbar\",\n  inputname: \"searchinput\",\n  imagename: \"searchbutton\",\n  placeholder: SEARCHTEXT[mediaSelected],\n  onSearchQuery: onSearchQuery,\n  searchQuery: searchQuery,\n  original: watch,\n  getWatchData: getWatchData,\n  getListenData: getListenData,\n  setSearchQuery: setSearchQuery,\n  mediaSelected: mediaSelected,\n  setServiceOptions: setServiceOptions,\n  serviceOptions: serviceOptions,\n  serviceSelections: serviceSelections,\n  setServiceSelections: setServiceSelections,\n  region: region,\n  setRegion: setRegion,\n  getServiceOptions: getServiceOptions,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(Experience, {\n  currentExperience: mediaSelected,\n  watch: watch,\n  listen: listen,\n  searchQuery: searchQuery,\n  getOverlayData: getOverlayData,\n  getOverlayServices: getOverlayServices,\n  overlayServices: overlayServices,\n  getWatchScore: getWatchScore,\n  getTVEpScores: getTVEpScores,\n  getListenLink: getListenLink,\n  listenCategoryData: listenCategoryData,\n  setListenCategoryData: setListenCategoryData,\n  getListenCatPlaylist: getListenCatPlaylist,\n  selectedCat: selectedCat,\n  setSelectedCat: setSelectedCat,\n  setSearchQuery: setSearchQuery,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(BackToTop, {\n  showAt: 100,\n  speed: 1000,\n  easing: \"easeInOutSine\",\n  children: /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://img.icons8.com/ios/96/000000/up.png\",\n    alt: \"top\",\n    className: \"top-arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }\n}));","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/AppBody.js"],"names":["React","Experience","SearchBar","MediaSelector","OPTIONS","SEARCHTEXT","BackToTop","isDark","AppBody","mediaSelected","onMediaChange","watch","listen","onSearchQuery","getWatchData","getListenData","setSearchQuery","searchQuery","getOverlayData","serviceOptions","setServiceOptions","serviceSelections","setServiceSelections","region","setRegion","getServiceOptions","getOverlayServices","overlayServices","getWatchScore","getTVEpScores","getListenLink","listenCategoryData","setListenCategoryData","getListenCatPlaylist","selectedCat","setSelectedCat","element","document","body","classList","toggle","getElementById","innerHTML","map","option"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { Experience } from \"./Experience\";\nimport { SearchBar } from \"./SearchBar\";\nimport { MediaSelector } from \"./MediaSelector\";\nimport { OPTIONS, SEARCHTEXT } from \"../constants\";\nimport BackToTop from \"react-back-to-top-button\";\n\nvar isDark = false;\n\nexport const AppBody = ({\n  mediaSelected,\n  onMediaChange,\n  watch,\n  listen,\n  onSearchQuery,\n  getWatchData,\n  getListenData,\n  setSearchQuery,\n  searchQuery,\n  getOverlayData,\n  serviceOptions,\n  setServiceOptions,\n  serviceSelections,\n  setServiceSelections,\n  region,\n  setRegion,\n  getServiceOptions,\n  getOverlayServices,\n  overlayServices,\n  getWatchScore,\n  getTVEpScores,\n  getListenLink,\n  listenCategoryData,\n  setListenCategoryData,\n  getListenCatPlaylist,\n  selectedCat,\n  setSelectedCat,\n}) => (\n  <section className=\"App-media-options\">\n    <button\n      className=\"color-mode\"\n      onClick={() => {\n        var element = document.body;\n        element.classList.toggle(\"dark-mode\");\n        isDark = !isDark;\n        document.getElementById(\"color-mode-img\").innerHTML = isDark\n          ? \"<img class='light-mode-vector' src='https://img.icons8.com/android/48/000000/sun.png' alt='light-mode'/>\"\n          : \"<img class='dark-mode-vector' src='https://img.icons8.com/ios/50/000000/crescent-moon.png' alt='dark-mode'/>\";\n      }}\n    >\n      <span id=\"color-mode-img\">\n        <img\n          className=\"dark-mode-vector\"\n          src=\"https://img.icons8.com/ios/50/000000/crescent-moon.png\"\n          alt=\"dark-mode\"\n        />\n      </span>\n    </button>\n    <div className=\"filters-header\">\n      <div className=\"media-selection\">\n        <p className=\"selection-label\">I want to</p>\n        {OPTIONS.map((option) => (\n          <MediaSelector\n            key={option}\n            option={option}\n            isSelected={mediaSelected === option}\n            onClick={(option) => {\n              onMediaChange(option);\n            }}\n          />\n        ))}\n      </div>\n      {/* <div className=\"region-selector\">Region: AU</div> */}\n      <SearchBar\n        name=\"searchbar\"\n        inputname=\"searchinput\"\n        imagename=\"searchbutton\"\n        placeholder={SEARCHTEXT[mediaSelected]}\n        onSearchQuery={onSearchQuery}\n        searchQuery={searchQuery}\n        original={watch}\n        getWatchData={getWatchData}\n        getListenData={getListenData}\n        setSearchQuery={setSearchQuery}\n        mediaSelected={mediaSelected}\n        setServiceOptions={setServiceOptions}\n        serviceOptions={serviceOptions}\n        serviceSelections={serviceSelections}\n        setServiceSelections={setServiceSelections}\n        region={region}\n        setRegion={setRegion}\n        getServiceOptions={getServiceOptions}\n      />\n    </div>\n    <Experience\n      currentExperience={mediaSelected}\n      watch={watch}\n      listen={listen}\n      searchQuery={searchQuery}\n      getOverlayData={getOverlayData}\n      getOverlayServices={getOverlayServices}\n      overlayServices={overlayServices}\n      getWatchScore={getWatchScore}\n      getTVEpScores={getTVEpScores}\n      getListenLink={getListenLink}\n      listenCategoryData={listenCategoryData}\n      setListenCategoryData={setListenCategoryData}\n      getListenCatPlaylist={getListenCatPlaylist}\n      selectedCat={selectedCat}\n      setSelectedCat={setSelectedCat}\n      setSearchQuery={setSearchQuery}\n    />\n    <BackToTop\n      showAt={100}\n      speed={1000}\n      easing=\"easeInOutSine\"\n      children={\n        <img\n          src=\"https://img.icons8.com/ios/96/000000/up.png\"\n          alt=\"top\"\n          className=\"top-arrow\"\n        />\n      }\n    />\n  </section>\n);\n"]},"metadata":{},"sourceType":"module"}