{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/AppBody.js\";\nimport React from \"react\";\nimport { Experience } from \"./Experience\";\nimport { SearchBar } from \"./SearchBar\";\nimport { MediaSelector } from \"./MediaSelector\";\nimport { OPTIONS, SEARCHTEXT } from \"../constants\";\nexport const AppBody = ({\n  mediaSelected,\n  onMediaChange,\n  watch,\n  listen,\n  onSearchQuery,\n  getWatchData,\n  getListenData\n}) => /*#__PURE__*/React.createElement(\"section\", {\n  className: \"App-media-options\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"filters-header\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"media-selection\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: \"selection-label\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }\n}, \"I want to\"), OPTIONS.map(option => /*#__PURE__*/React.createElement(MediaSelector, {\n  key: option,\n  option: option,\n  isSelected: mediaSelected === option,\n  onClick: option => {\n    onMediaChange(option);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 11\n  }\n}))), /*#__PURE__*/React.createElement(SearchBar, {\n  name: \"searchbar\",\n  inputname: \"searchinput\",\n  imagename: \"searchbutton\",\n  placeholder: SEARCHTEXT[mediaSelected],\n  onSearchQuery: onSearchQuery,\n  experience: \"WATCH\",\n  original: watch,\n  getWatchData: getWatchData,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(Experience, {\n  currentExperience: mediaSelected,\n  watch: watch,\n  listen: listen,\n  onSearchQuery: onSearchQuery,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }\n}));","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/AppBody.js"],"names":["React","Experience","SearchBar","MediaSelector","OPTIONS","SEARCHTEXT","AppBody","mediaSelected","onMediaChange","watch","listen","onSearchQuery","getWatchData","getListenData","map","option"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,cAApC;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AACtBC,EAAAA,aADsB;AAEtBC,EAAAA,aAFsB;AAGtBC,EAAAA,KAHsB;AAItBC,EAAAA,MAJsB;AAKtBC,EAAAA,aALsB;AAMtBC,EAAAA,YANsB;AAOtBC,EAAAA;AAPsB,CAAD,kBASrB;AAAS,EAAA,SAAS,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAG,EAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGT,OAAO,CAACU,GAAR,CAAYC,MAAM,iBACjB,oBAAC,aAAD;AACE,EAAA,GAAG,EAAEA,MADP;AAEE,EAAA,MAAM,EAAEA,MAFV;AAGE,EAAA,UAAU,EAAER,aAAa,KAAKQ,MAHhC;AAIE,EAAA,OAAO,EAAEA,MAAM,IAAI;AACjBP,IAAAA,aAAa,CAACO,MAAD,CAAb;AACD,GANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CAFH,CADF,eAcE,oBAAC,SAAD;AACE,EAAA,IAAI,EAAC,WADP;AAEE,EAAA,SAAS,EAAC,aAFZ;AAGE,EAAA,SAAS,EAAC,cAHZ;AAIE,EAAA,WAAW,EAAEV,UAAU,CAACE,aAAD,CAJzB;AAKE,EAAA,aAAa,EAAEI,aALjB;AAME,EAAA,UAAU,EAAC,OANb;AAOE,EAAA,QAAQ,EAAEF,KAPZ;AAQE,EAAA,YAAY,EAAEG,YARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAdF,CADF,eA0BE,oBAAC,UAAD;AACE,EAAA,iBAAiB,EAAEL,aADrB;AAEE,EAAA,KAAK,EAAEE,KAFT;AAGE,EAAA,MAAM,EAAEC,MAHV;AAIE,EAAA,aAAa,EAAEC,aAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA1BF,CATK","sourcesContent":["import React from \"react\";\n\nimport { Experience } from \"./Experience\";\nimport { SearchBar } from \"./SearchBar\";\nimport { MediaSelector } from \"./MediaSelector\";\nimport { OPTIONS, SEARCHTEXT } from \"../constants\";\n\nexport const AppBody = ({\n  mediaSelected,\n  onMediaChange,\n  watch,\n  listen,\n  onSearchQuery,\n  getWatchData,\n  getListenData\n}) => (\n  <section className=\"App-media-options\">\n    <div className=\"filters-header\">\n      <div className=\"media-selection\">\n        <p className=\"selection-label\">I want to</p>\n        {OPTIONS.map(option => (\n          <MediaSelector\n            key={option}\n            option={option}\n            isSelected={mediaSelected === option}\n            onClick={option => {\n              onMediaChange(option);\n            }}\n          />\n        ))}\n      </div>\n      <SearchBar\n        name=\"searchbar\"\n        inputname=\"searchinput\"\n        imagename=\"searchbutton\"\n        placeholder={SEARCHTEXT[mediaSelected]}\n        onSearchQuery={onSearchQuery}\n        experience=\"WATCH\"\n        original={watch}\n        getWatchData={getWatchData}\n      />\n    </div>\n    <Experience\n      currentExperience={mediaSelected}\n      watch={watch}\n      listen={listen}\n      onSearchQuery={onSearchQuery}\n    />\n  </section>\n);\n"]},"metadata":{},"sourceType":"module"}