{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/ListenMedia.js\";\nimport React from \"react\";\nimport { ListenSet } from \"./ListenSet\";\nimport { PodcastSet } from \"./PodcastSet\";\nimport { ListenMediaNav } from \"./ListenMediaNav\";\nexport function ListenMedia({\n  category,\n  content,\n  type,\n  num\n}) {\n  if (content !== undefined) {\n    const contentStart = content.slice(0, 50);\n\n    if (type === \"Podcast\" || type === \"Playlist\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"category-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"category-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      }, category), /*#__PURE__*/React.createElement(ListenMediaNav, {\n        num: num,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"listen-category-media\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }\n      }, contentStart.map((item, index) => /*#__PURE__*/React.createElement(PodcastSet, {\n        index: index,\n        imageSource: item[\"imgURL\"],\n        title: item[\"show_name\"],\n        subtext: item[\"description\"],\n        show_link: item[\"show_link\"],\n        mediaClass: \"listen-media\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }\n      }))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"category-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, category), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"listen-category-media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListenMediaNav, {\n      num: num,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), contentStart.map((item, index) => /*#__PURE__*/React.createElement(ListenSet, {\n      index: index,\n      imageSource: item[\"imgURL\"],\n      title: item[\"music_name\"],\n      subtext: item[\"type\"],\n      artist: item[\"artist_name\"],\n      artist_link: item[\"artist_link\"],\n      music_link: item[\"music_link\"],\n      mediaClass: \"listen-media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/ListenMedia.js"],"names":["React","ListenSet","PodcastSet","ListenMediaNav","ListenMedia","category","content","type","num","undefined","contentStart","slice","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,WAAT,CAAqB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA;AAA3B,CAArB,EAAuD;AAC5D,MAAIF,OAAO,KAAKG,SAAhB,EAA2B;AACzB,UAAMC,YAAY,GAAGJ,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiB,EAAjB,CAArB;;AACA,QAAIJ,IAAI,KAAK,SAAT,IAAsBA,IAAI,KAAK,UAAnC,EAA+C;AAC7C,0BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BF,QAA/B,CADF,eAEE,oBAAC,cAAD;AAAgB,QAAA,GAAG,EAAEG,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGE,YAAY,CAACE,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,kBAChB,oBAAC,UAAD;AACE,QAAA,KAAK,EAAEA,KADT;AAEE,QAAA,WAAW,EAAED,IAAI,CAAC,QAAD,CAFnB;AAGE,QAAA,KAAK,EAAEA,IAAI,CAAC,WAAD,CAHb;AAIE,QAAA,OAAO,EAAEA,IAAI,CAAC,aAAD,CAJf;AAKE,QAAA,SAAS,EAAEA,IAAI,CAAC,WAAD,CALjB;AAME,QAAA,UAAU,EAAC,cANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CAHF,CADF;AAkBD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BR,QAA/B,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEG,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGE,YAAY,CAACE,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,kBAChB,oBAAC,SAAD;AACE,MAAA,KAAK,EAAEA,KADT;AAEE,MAAA,WAAW,EAAED,IAAI,CAAC,QAAD,CAFnB;AAGE,MAAA,KAAK,EAAEA,IAAI,CAAC,YAAD,CAHb;AAIE,MAAA,OAAO,EAAEA,IAAI,CAAC,MAAD,CAJf;AAKE,MAAA,MAAM,EAAEA,IAAI,CAAC,aAAD,CALd;AAME,MAAA,WAAW,EAAEA,IAAI,CAAC,aAAD,CANnB;AAOE,MAAA,UAAU,EAAEA,IAAI,CAAC,YAAD,CAPlB;AAQE,MAAA,UAAU,EAAC,cARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CAFF,CADF;AAoBD,GA1CD,MA0CO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF","sourcesContent":["import React from \"react\";\nimport { ListenSet } from \"./ListenSet\";\nimport { PodcastSet } from \"./PodcastSet\";\nimport { ListenMediaNav } from \"./ListenMediaNav\";\n\nexport function ListenMedia({ category, content, type, num }) {\n  if (content !== undefined) {\n    const contentStart = content.slice(0, 50);\n    if (type === \"Podcast\" || type === \"Playlist\") {\n      return (\n        <div className=\"category-list\">\n          <p className=\"category-title\">{category}</p>\n          <ListenMediaNav num={num} />\n          <div className=\"listen-category-media\">\n            {contentStart.map((item, index) => (\n              <PodcastSet\n                index={index}\n                imageSource={item[\"imgURL\"]}\n                title={item[\"show_name\"]}\n                subtext={item[\"description\"]}\n                show_link={item[\"show_link\"]}\n                mediaClass=\"listen-media\"\n              />\n            ))}\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"category-list\">\n        <p className=\"category-title\">{category}</p>\n        <div className=\"listen-category-media\">\n          <ListenMediaNav num={num} />\n          {contentStart.map((item, index) => (\n            <ListenSet\n              index={index}\n              imageSource={item[\"imgURL\"]}\n              title={item[\"music_name\"]}\n              subtext={item[\"type\"]}\n              artist={item[\"artist_name\"]}\n              artist_link={item[\"artist_link\"]}\n              music_link={item[\"music_link\"]}\n              mediaClass=\"listen-media\"\n            />\n          ))}\n        </div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}