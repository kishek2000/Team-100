{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/ListenOverlay.js\";\nimport React from \"react\";\nimport { LISTEN_LOGOS } from \"../constants/index\";\nimport LoadingSpinner from \"../images/tail-spin.svg\";\n\nfunction ListenOverlayMeta({\n  releaseDate,\n  typeLabel,\n  totalTracks,\n  giveString\n}) {\n  if (totalTracks === 1) {\n    typeLabel = \"Single\";\n    totalTracks = null;\n  } else if (typeLabel !== \"album\") {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n  } else {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n    totalTracks = `${totalTracks} Tracks`;\n  }\n\n  if (giveString) {\n    return [releaseDate, typeLabel, totalTracks].filter(item => !!item).join(\" | \");\n  }\n\n  return typeLabel;\n}\n\nfunction CloseOverlay(setOpenOverlayID, setOverlayData, setListenYTLink) {\n  setOpenOverlayID(-1);\n  setOverlayData({});\n  setListenYTLink({});\n}\n\nexport function ListenOverlay({\n  media_data,\n  setOpenOverlayID,\n  setOverlayData,\n  listenYTLink,\n  setListenYTLink\n}) {\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"overlay\",\n    onKeyDown: event => {\n      if (event.keyCode === 27) {\n        console.log(\"yo\");\n        CloseOverlay(setOpenOverlayID, setOverlayData, setListenYTLink);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-poster-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: media_data[\"imgURL\"],\n    className: \"overlay-poster-music\",\n    alt: \"media-poster\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), media_data[\"copyright_statement\"] !== \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listen-copyrights\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, media_data[\"copyright_statement\"]) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-information-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, media_data[\"listen_name\"]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-text\",\n    onClick: () => {\n      CloseOverlay(setOpenOverlayID, setOverlayData, setListenYTLink);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, media_data[\"type\"] === \"album\" || media_data[\"type\"] === \"single\" ? media_data[\"artist_name\"] : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-meta-listen-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListenOverlayMeta, {\n    releaseDate: media_data[\"release_date\"],\n    typeLabel: media_data[\"type\"],\n    totalTracks: media_data[\"total_tracks\"],\n    giveString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })), media_data[\"type\"] === \"podcast\" || media_data[\"type\"] === \"playlist\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Description\"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-listen-description-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, media_data[\"description\"])) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"Play Now\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-viewing-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spotify-listen\",\n    style: Object.keys(listenYTLink).length > 0 && listenYTLink !== \"\" ? {\n      width: \"50%\"\n    } : {\n      width: \"97%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-listen-options-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Spotify:\"), /*#__PURE__*/React.createElement(\"iframe\", {\n    src: media_data[\"listen_link\"].slice(0, 25) + \"embed/\" + media_data[\"listen_link\"].slice(25),\n    className: \"spotify-play\",\n    title: \"play\",\n    frameborder: \"0\",\n    style: media_data[\"type\"] !== \"podcast\" ? {\n      height: \"13vw\"\n    } : {\n      height: \"\"\n    },\n    allowtransparency: \"true\",\n    allow: \"encrypted-media\",\n    scrolling: \"no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  })), Object.keys(listenYTLink).length > 0 && listenYTLink !== \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listen-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-listen-options-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, \"Youtube -\", \" \", String(ListenOverlayMeta({\n    releaseDate: media_data[\"release_date\"],\n    typeLabel: media_data[\"type\"],\n    totalTracks: media_data[\"total_tracks\"],\n    giveString: false\n  })) === \"Single\" || String(ListenOverlayMeta({\n    releaseDate: media_data[\"release_date\"],\n    typeLabel: media_data[\"type\"],\n    totalTracks: media_data[\"total_tracks\"],\n    giveString: false\n  })) === \"Track\" ? \"Full Music Video\" : \"Full \" + String(ListenOverlayMeta({\n    releaseDate: media_data[\"release_date\"],\n    typeLabel: media_data[\"type\"],\n    totalTracks: media_data[\"total_tracks\"],\n    giveString: false\n  })), \":\"), /*#__PURE__*/React.createElement(\"iframe\", {\n    title: \"music-video\",\n    src: listenYTLink[0][\"service_link\"],\n    allowfullscreen: \"allowfullscreen\",\n    className: \"overlay-music-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  })), Object.keys(listenYTLink).length > 0 && listenYTLink !== \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"All Services\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"services-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, listenYTLink.slice(1, 15).map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listen-service-name\",\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: item[\"service_link\"],\n    target: \"_blank\",\n    className: \"service-redirect\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: LISTEN_LOGOS[item[\"service_name\"]],\n    alt: \"logo\",\n    className: \"overlay-listen-service-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-services-metadata\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 23\n    }\n  }, item[\"service_name\"]))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-watch-description-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, \"Loading...\", /*#__PURE__*/React.createElement(\"img\", {\n    src: LoadingSpinner,\n    alt: \"load\",\n    className: \"overlay-loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/ListenOverlay.js"],"names":["React","LISTEN_LOGOS","ListenOverlayMeta","releaseDate","typeLabel","totalTracks","giveString","toUpperCase","slice","filter","item","join","CloseOverlay","setOpenOverlayID","setOverlayData","setListenYTLink","ListenOverlay","media_data","listenYTLink","event","keyCode","console","log","Object","keys","length","width","height","String","map","index","LoadingSpinner"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { LISTEN_LOGOS } from \"../constants/index\";\nimport LoadingSpinner from \"../images/tail-spin.svg\";\n\nfunction ListenOverlayMeta({\n  releaseDate,\n  typeLabel,\n  totalTracks,\n  giveString,\n}) {\n  if (totalTracks === 1) {\n    typeLabel = \"Single\";\n    totalTracks = null;\n  } else if (typeLabel !== \"album\") {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n  } else {\n    typeLabel = typeLabel[0].toUpperCase() + typeLabel.slice(1);\n    totalTracks = `${totalTracks} Tracks`;\n  }\n  if (giveString) {\n    return [releaseDate, typeLabel, totalTracks]\n      .filter((item) => !!item)\n      .join(\" | \");\n  }\n  return typeLabel;\n}\n\nfunction CloseOverlay(setOpenOverlayID, setOverlayData, setListenYTLink) {\n  setOpenOverlayID(-1);\n  setOverlayData({});\n  setListenYTLink({});\n}\n\nexport function ListenOverlay({\n  media_data,\n  setOpenOverlayID,\n  setOverlayData,\n  listenYTLink,\n  setListenYTLink,\n}) {\n  return (\n    <section\n      className=\"overlay\"\n      onKeyDown={(event) => {\n        if (event.keyCode === 27) {\n          console.log(\"yo\");\n          CloseOverlay(setOpenOverlayID, setOverlayData, setListenYTLink);\n        }\n      }}\n    >\n      <div className=\"overlay-poster-wrapper\">\n        <img\n          src={media_data[\"imgURL\"]}\n          className=\"overlay-poster-music\"\n          alt=\"media-poster\"\n        />\n        {media_data[\"copyright_statement\"] !== \"\" ? (\n          <div className=\"listen-copyrights\">\n            {media_data[\"copyright_statement\"]}\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n      <div className=\"overlay-information\">\n        <div className=\"overlay-information-header\">\n          <div className=\"overlay-title\">{media_data[\"listen_name\"]}</div>\n          <div\n            className=\"close-text\"\n            onClick={() => {\n              CloseOverlay(setOpenOverlayID, setOverlayData, setListenYTLink);\n            }}\n          >\n            X\n          </div>\n        </div>\n\n        <div className=\"overlay-subtitle\">\n          {media_data[\"type\"] === \"album\" || media_data[\"type\"] === \"single\"\n            ? media_data[\"artist_name\"]\n            : \"\"}\n        </div>\n        <div className=\"overlay-meta-listen-text\">\n          <ListenOverlayMeta\n            releaseDate={media_data[\"release_date\"]}\n            typeLabel={media_data[\"type\"]}\n            totalTracks={media_data[\"total_tracks\"]}\n            giveString={true}\n          />\n        </div>\n        {media_data[\"type\"] === \"podcast\" ||\n        media_data[\"type\"] === \"playlist\" ? (\n          <div className=\"overlay-description\">\n            {\" \"}\n            <div className=\"overlay-subtitle\">Description</div>{\" \"}\n            <div className=\"overlay-listen-description-text\">\n              {media_data[\"description\"]}\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n        <div className=\"overlay-subtitle\">Play Now</div>\n        <div className=\"overlay-viewing-row\">\n          <div\n            className=\"spotify-listen\"\n            style={\n              Object.keys(listenYTLink).length > 0 && listenYTLink !== \"\"\n                ? { width: \"50%\" }\n                : { width: \"97%\" }\n            }\n          >\n            <div className=\"overlay-listen-options-text\">Spotify:</div>\n            <iframe\n              src={\n                media_data[\"listen_link\"].slice(0, 25) +\n                \"embed/\" +\n                media_data[\"listen_link\"].slice(25)\n              }\n              className=\"spotify-play\"\n              title=\"play\"\n              frameborder=\"0\"\n              style={\n                media_data[\"type\"] !== \"podcast\"\n                  ? { height: \"13vw\" }\n                  : { height: \"\" }\n              }\n              allowtransparency=\"true\"\n              allow=\"encrypted-media\"\n              scrolling=\"no\"\n            ></iframe>\n          </div>\n          {Object.keys(listenYTLink).length > 0 && listenYTLink !== \"\" ? (\n            <div className=\"listen-video\">\n              <div className=\"overlay-listen-options-text\">\n                Youtube -{\" \"}\n                {String(\n                  ListenOverlayMeta({\n                    releaseDate: media_data[\"release_date\"],\n                    typeLabel: media_data[\"type\"],\n                    totalTracks: media_data[\"total_tracks\"],\n                    giveString: false,\n                  })\n                ) === \"Single\" ||\n                String(\n                  ListenOverlayMeta({\n                    releaseDate: media_data[\"release_date\"],\n                    typeLabel: media_data[\"type\"],\n                    totalTracks: media_data[\"total_tracks\"],\n                    giveString: false,\n                  })\n                ) === \"Track\"\n                  ? \"Full Music Video\"\n                  : \"Full \" +\n                    String(\n                      ListenOverlayMeta({\n                        releaseDate: media_data[\"release_date\"],\n                        typeLabel: media_data[\"type\"],\n                        totalTracks: media_data[\"total_tracks\"],\n                        giveString: false,\n                      })\n                    )}\n                :\n              </div>\n              <iframe\n                title=\"music-video\"\n                src={listenYTLink[0][\"service_link\"]}\n                allowfullscreen=\"allowfullscreen\"\n                className=\"overlay-music-video\"\n              ></iframe>\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n        {Object.keys(listenYTLink).length > 0 && listenYTLink !== \"\" ? (\n          <div>\n            <div className=\"overlay-subtitle\">All Services</div>\n            <div className=\"services-buttons\">\n              {listenYTLink.slice(1, 15).map((item, index) => (\n                <div className=\"listen-service-name\" index={index}>\n                  <a\n                    href={item[\"service_link\"]}\n                    target=\"_blank\"\n                    className=\"service-redirect\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <div className=\"wrap\">\n                      <img\n                        src={LISTEN_LOGOS[item[\"service_name\"]]}\n                        alt=\"logo\"\n                        className=\"overlay-listen-service-logo\"\n                      />\n                    </div>\n                    <div className=\"overlay-services-metadata\">\n                      <div>{item[\"service_name\"]}</div>\n                    </div>\n                  </a>\n                </div>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div className=\"overlay-watch-description-text\">\n            Loading...\n            <img src={LoadingSpinner} alt=\"load\" className=\"overlay-loader\" />\n          </div>\n        )}\n      </div>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}