{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar qs_1 = require(\"qs\");\n\nfunction handleQs(url, query) {\n  var _a = url.split('?'),\n      start = _a[0],\n      part2 = _a[1];\n\n  var qs = (part2 || '').split('#')[0];\n  var end = part2 && part2.split('#').length > 1 ? '#' + part2.split('#')[1] : '';\n  var baseQs = qs_1.parse(qs);\n\n  for (var i in query) {\n    baseQs[i] = query[i];\n  }\n\n  qs = qs_1.stringify(baseQs);\n\n  if (qs !== '') {\n    qs = '?' + qs;\n  }\n\n  return start + qs + end;\n}\n\nexports[\"default\"] = handleQs;","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/node_modules/then-request/lib/handle-qs.js"],"names":["exports","__esModule","qs_1","require","handleQs","url","query","_a","split","start","part2","qs","end","length","baseQs","parse","i","stringify"],"mappings":"AAAA;;AACAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA8B;AAC1B,MAAIC,EAAE,GAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAT;AAAA,MAAyBC,KAAK,GAAGF,EAAE,CAAC,CAAD,CAAnC;AAAA,MAAwCG,KAAK,GAAGH,EAAE,CAAC,CAAD,CAAlD;;AACA,MAAII,EAAE,GAAG,CAACD,KAAK,IAAI,EAAV,EAAcF,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAT;AACA,MAAII,GAAG,GAAGF,KAAK,IAAIA,KAAK,CAACF,KAAN,CAAY,GAAZ,EAAiBK,MAAjB,GAA0B,CAAnC,GAAuC,MAAMH,KAAK,CAACF,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAA7C,GAAmE,EAA7E;AACA,MAAIM,MAAM,GAAGZ,IAAI,CAACa,KAAL,CAAWJ,EAAX,CAAb;;AACA,OAAK,IAAIK,CAAT,IAAcV,KAAd,EAAqB;AACjBQ,IAAAA,MAAM,CAACE,CAAD,CAAN,GAAYV,KAAK,CAACU,CAAD,CAAjB;AACH;;AACDL,EAAAA,EAAE,GAAGT,IAAI,CAACe,SAAL,CAAeH,MAAf,CAAL;;AACA,MAAIH,EAAE,KAAK,EAAX,EAAe;AACXA,IAAAA,EAAE,GAAG,MAAMA,EAAX;AACH;;AACD,SAAOF,KAAK,GAAGE,EAAR,GAAaC,GAApB;AACH;;AACDZ,OAAO,CAAC,SAAD,CAAP,GAAqBI,QAArB","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar qs_1 = require(\"qs\");\nfunction handleQs(url, query) {\n    var _a = url.split('?'), start = _a[0], part2 = _a[1];\n    var qs = (part2 || '').split('#')[0];\n    var end = part2 && part2.split('#').length > 1 ? '#' + part2.split('#')[1] : '';\n    var baseQs = qs_1.parse(qs);\n    for (var i in query) {\n        baseQs[i] = query[i];\n    }\n    qs = qs_1.stringify(baseQs);\n    if (qs !== '') {\n        qs = '?' + qs;\n    }\n    return start + qs + end;\n}\nexports[\"default\"] = handleQs;\n"]},"metadata":{},"sourceType":"script"}