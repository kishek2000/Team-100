{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/WatchMedia.js\";\nimport React from \"react\";\nimport { WatchMediaNav } from \"./WatchMediaNav\";\n\nfunction WatchMediaMetadata({\n  airDate,\n  language,\n  genre\n}) {\n  return [airDate, language, genre].filter(item => !!item).join(\" | \");\n}\n\nexport function WatchMedia({\n  category,\n  content,\n  getOverlayData,\n  num,\n  getOverlayServices\n}) {\n  if (content !== undefined) {\n    const contentStart = content;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"category-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, category), /*#__PURE__*/React.createElement(WatchMediaNav, {\n      num: num,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, contentStart.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"media-template\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"media-image-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"media-user-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"user-score-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }\n    }, Math.round(item[\"score\"] * 1000) / 10, \"%\")), console.log(item[\"imgURL\"]), /*#__PURE__*/React.createElement(\"img\", {\n      index: index,\n      src: item[\"imgURL\"],\n      className: \"media-image\",\n      alt: \"https://cdn.shopify.com/s/assets/no-image-2048-5e88c1b20e087fb7bbe9a3771824e743c244f437e4f8ba93bbf7b11b53f7824c.gif\",\n      onClick: () => {\n        getOverlayData(item[\"id\"], item[\"type\"]);\n        getOverlayServices(item[\"id\"], item[\"name\"], item[\"popularity\"], item[\"score\"]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"watch-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, item[\"name\"]), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"watch-metadata\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(WatchMediaMetadata, {\n      airDate: item[\"first_air_date\"],\n      language: item[\"lang\"],\n      genre: item[\"genre\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }))))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/WatchMedia.js"],"names":["React","WatchMediaNav","WatchMediaMetadata","airDate","language","genre","filter","item","join","WatchMedia","category","content","getOverlayData","num","getOverlayServices","undefined","contentStart","map","index","Math","round","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAEA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAA5B,EAA0D;AACxD,SAAO,CAACF,OAAD,EAAUC,QAAV,EAAoBC,KAApB,EAA2BC,MAA3B,CAAmCC,IAAD,IAAU,CAAC,CAACA,IAA9C,EAAoDC,IAApD,CAAyD,KAAzD,CAAP;AACD;;AAED,OAAO,SAASC,UAAT,CAAoB;AACzBC,EAAAA,QADyB;AAEzBC,EAAAA,OAFyB;AAGzBC,EAAAA,cAHyB;AAIzBC,EAAAA,GAJyB;AAKzBC,EAAAA;AALyB,CAApB,EAMJ;AACD,MAAIH,OAAO,KAAKI,SAAhB,EAA2B;AACzB,UAAMC,YAAY,GAAGL,OAArB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BD,QAA/B,CADF,eAEE,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEG,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,YAAY,CAACC,GAAb,CAAiB,CAACV,IAAD,EAAOW,KAAP,kBAChB;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,IAAI,CAACC,KAAL,CAAWb,IAAI,CAAC,OAAD,CAAJ,GAAgB,IAA3B,IAAmC,EADtC,MADF,CADF,EAMGc,OAAO,CAACC,GAAR,CAAYf,IAAI,CAAC,QAAD,CAAhB,CANH,eAOE;AACE,MAAA,KAAK,EAAEW,KADT;AAEE,MAAA,GAAG,EAAEX,IAAI,CAAC,QAAD,CAFX;AAGE,MAAA,SAAS,EAAC,aAHZ;AAIE,MAAA,GAAG,EAAC,qHAJN;AAKE,MAAA,OAAO,EAAE,MAAM;AACbK,QAAAA,cAAc,CAACL,IAAI,CAAC,IAAD,CAAL,EAAaA,IAAI,CAAC,MAAD,CAAjB,CAAd;AACAO,QAAAA,kBAAkB,CAChBP,IAAI,CAAC,IAAD,CADY,EAEhBA,IAAI,CAAC,MAAD,CAFY,EAGhBA,IAAI,CAAC,YAAD,CAHY,EAIhBA,IAAI,CAAC,OAAD,CAJY,CAAlB;AAMD,OAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,eAwBE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,IAAI,CAAC,MAAD,CAAhC,CAxBF,eAyBE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,kBAAD;AACE,MAAA,OAAO,EAAEA,IAAI,CAAC,gBAAD,CADf;AAEE,MAAA,QAAQ,EAAEA,IAAI,CAAC,MAAD,CAFhB;AAGE,MAAA,KAAK,EAAEA,IAAI,CAAC,OAAD,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAzBF,CADD,CADH,CAHF,CADF;AA2CD,GA7CD,MA6CO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF","sourcesContent":["import React from \"react\";\nimport { WatchMediaNav } from \"./WatchMediaNav\";\n\nfunction WatchMediaMetadata({ airDate, language, genre }) {\n  return [airDate, language, genre].filter((item) => !!item).join(\" | \");\n}\n\nexport function WatchMedia({\n  category,\n  content,\n  getOverlayData,\n  num,\n  getOverlayServices,\n}) {\n  if (content !== undefined) {\n    const contentStart = content;\n    return (\n      <div className=\"category-list\">\n        <p className=\"category-title\">{category}</p>\n        <WatchMediaNav num={num} />\n        <div className=\"category-media\">\n          {contentStart.map((item, index) => (\n            <div className=\"media-template\">\n              <div className=\"media-image-wrapper\">\n                <div className=\"media-user-score\">\n                  <span className=\"user-score-text\">\n                    {Math.round(item[\"score\"] * 1000) / 10}%\n                  </span>\n                </div>\n                {console.log(item[\"imgURL\"])}\n                <img\n                  index={index}\n                  src={item[\"imgURL\"]}\n                  className=\"media-image\"\n                  alt=\"https://cdn.shopify.com/s/assets/no-image-2048-5e88c1b20e087fb7bbe9a3771824e743c244f437e4f8ba93bbf7b11b53f7824c.gif\"\n                  onClick={() => {\n                    getOverlayData(item[\"id\"], item[\"type\"]);\n                    getOverlayServices(\n                      item[\"id\"],\n                      item[\"name\"],\n                      item[\"popularity\"],\n                      item[\"score\"]\n                    );\n                  }}\n                />\n              </div>\n              <p className=\"watch-title\">{item[\"name\"]}</p>\n              <div className=\"watch-metadata\">\n                <WatchMediaMetadata\n                  airDate={item[\"first_air_date\"]}\n                  language={item[\"lang\"]}\n                  genre={item[\"genre\"]}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}