{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/WatchExperience.js\";\nimport React from \"react\";\nimport { MediaCategoryList } from \"./MediaCategoryList\";\nimport LoadingSpinner from \"../images/tail-spin.svg\"; // This function will give us the complete watch experience!\n\nexport function WatchExperience({\n  watch,\n  searchQuery,\n  getOverlayData,\n  getOverlayServices,\n  getWatchScore,\n  getTVEpScores,\n  setSearchQuery\n}) {\n  const {\n    data\n  } = watch;\n\n  if (Object.keys(data).length) {\n    if (searchQuery.length > 0 && !data[\"Search Results\"]) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading-screen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, \"LOADING SEARCH RESULTS...\"), /*#__PURE__*/React.createElement(\"img\", {\n        src: LoadingSpinner,\n        alt: \"load\",\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }));\n    } else if (searchQuery.length > 0 && data[`Search Results`]) {\n      const tv_results = data[`Search Results`][\"TV Results\"];\n      const movie_results = data[`Search Results`][\"Movie Results\"];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-results\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-results-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-results-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, \"Search Results for \", searchQuery), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"clear-search\",\n        onClick: () => {\n          setSearchQuery(\"\");\n          var input = document.getElementsByClassName(\"searchinput\");\n          var input_value = input.getAttribute(\"value\");\n          input_value = \"\";\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, \"Clear Search\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-watch-lists\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"TV Results\",\n        media: \"WATCH\",\n        mediaContent: tv_results,\n        getOverlayData: getOverlayData,\n        getOverlayServices: getOverlayServices,\n        getWatchScore: getWatchScore,\n        getTVEpScores: getTVEpScores,\n        num: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"Movie Results\",\n        media: \"WATCH\",\n        mediaContent: movie_results,\n        getOverlayData: getOverlayData,\n        getOverlayServices: getOverlayServices,\n        getWatchScore: getWatchScore,\n        getTVEpScores: getTVEpScores,\n        num: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"watch-experience-lists\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"Trending Daily\",\n        media: \"WATCH\",\n        mediaContent: data[\"Trending Daily\"],\n        getOverlayData: getOverlayData,\n        getOverlayServices: getOverlayServices,\n        getWatchScore: getWatchScore,\n        getTVEpScores: getTVEpScores,\n        num: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"Top Rated TV Shows\",\n        media: \"WATCH\",\n        mediaContent: data[\"Top Rated TV Shows\"],\n        getOverlayData: getOverlayData,\n        getOverlayServices: getOverlayServices,\n        getWatchScore: getWatchScore,\n        getTVEpScores: getTVEpScores,\n        num: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"On Air TV Shows\",\n        media: \"WATCH\",\n        mediaContent: data[\"On Air TV Shows\"],\n        getOverlayData: getOverlayData,\n        getOverlayServices: getOverlayServices,\n        getWatchScore: getWatchScore,\n        getTVEpScores: getTVEpScores,\n        num: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"Popular TV Shows\",\n        media: \"WATCH\",\n        mediaContent: data[\"Popular TV Shows\"],\n        getOverlayData: getOverlayData,\n        getOverlayServices: getOverlayServices,\n        getWatchScore: getWatchScore,\n        getTVEpScores: getTVEpScores,\n        num: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"Top Rated Movies\",\n        media: \"WATCH\",\n        mediaContent: data[\"Top Rated Movies\"],\n        getOverlayData: getOverlayData,\n        getOverlayServices: getOverlayServices,\n        getWatchScore: getWatchScore,\n        getTVEpScores: getTVEpScores,\n        num: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(MediaCategoryList, {\n        category: \"Popular Movies\",\n        media: \"WATCH\",\n        mediaContent: data[\"Popular Movies\"],\n        getOverlayData: getOverlayData,\n        getOverlayServices: getOverlayServices,\n        getWatchScore: getWatchScore,\n        getTVEpScores: getTVEpScores,\n        num: \"5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }));\n    }\n  } else {\n    // TODO: add loading state\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, \"LOADING WATCH ITEMS...\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: LoadingSpinner,\n      alt: \"load\",\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/WatchExperience.js"],"names":["React","MediaCategoryList","WatchExperience","watch","searchQuery","getOverlayData","getOverlayServices","getWatchScore","getTVEpScores","setSearchQuery","data","Object","keys","length","LoadingSpinner","tv_results","movie_results","input","document","getElementsByClassName","input_value","getAttribute"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { MediaCategoryList } from \"./MediaCategoryList\";\nimport LoadingSpinner from \"../images/tail-spin.svg\";\n\n// This function will give us the complete watch experience!\nexport function WatchExperience({\n  watch,\n  searchQuery,\n  getOverlayData,\n  getOverlayServices,\n  getWatchScore,\n  getTVEpScores,\n  setSearchQuery,\n}) {\n  const { data } = watch;\n  if (Object.keys(data).length) {\n    if (searchQuery.length > 0 && !data[\"Search Results\"]) {\n      return (\n        <div className=\"loading-screen\">\n          <div className=\"loading-text\">LOADING SEARCH RESULTS...</div>\n          <img src={LoadingSpinner} alt=\"load\" className=\"loader\" />\n        </div>\n      );\n    } else if (searchQuery.length > 0 && data[`Search Results`]) {\n      const tv_results = data[`Search Results`][\"TV Results\"];\n      const movie_results = data[`Search Results`][\"Movie Results\"];\n      return (\n        <div className=\"search-results\">\n          <div className=\"search-results-header\">\n            <div className=\"search-results-title\">\n              Search Results for {searchQuery}\n            </div>\n            <div\n              className=\"clear-search\"\n              onClick={() => {\n                setSearchQuery(\"\");\n                var input = document.getElementsByClassName(\"searchinput\");\n                var input_value = input.getAttribute(\"value\");\n                input_value = \"\";\n              }}\n            >\n              Clear Search\n            </div>\n          </div>\n          <div className=\"search-watch-lists\">\n            <MediaCategoryList\n              category=\"TV Results\"\n              media=\"WATCH\"\n              mediaContent={tv_results}\n              getOverlayData={getOverlayData}\n              getOverlayServices={getOverlayServices}\n              getWatchScore={getWatchScore}\n              getTVEpScores={getTVEpScores}\n              num=\"0\"\n            />\n            <MediaCategoryList\n              category=\"Movie Results\"\n              media=\"WATCH\"\n              mediaContent={movie_results}\n              getOverlayData={getOverlayData}\n              getOverlayServices={getOverlayServices}\n              getWatchScore={getWatchScore}\n              getTVEpScores={getTVEpScores}\n              num=\"1\"\n            />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"watch-experience-lists\">\n          <MediaCategoryList\n            category=\"Trending Daily\"\n            media=\"WATCH\"\n            mediaContent={data[\"Trending Daily\"]}\n            getOverlayData={getOverlayData}\n            getOverlayServices={getOverlayServices}\n            getWatchScore={getWatchScore}\n            getTVEpScores={getTVEpScores}\n            num=\"0\"\n          />\n          <MediaCategoryList\n            category=\"Top Rated TV Shows\"\n            media=\"WATCH\"\n            mediaContent={data[\"Top Rated TV Shows\"]}\n            getOverlayData={getOverlayData}\n            getOverlayServices={getOverlayServices}\n            getWatchScore={getWatchScore}\n            getTVEpScores={getTVEpScores}\n            num=\"1\"\n          />\n          <MediaCategoryList\n            category=\"On Air TV Shows\"\n            media=\"WATCH\"\n            mediaContent={data[\"On Air TV Shows\"]}\n            getOverlayData={getOverlayData}\n            getOverlayServices={getOverlayServices}\n            getWatchScore={getWatchScore}\n            getTVEpScores={getTVEpScores}\n            num=\"2\"\n          />\n          <MediaCategoryList\n            category=\"Popular TV Shows\"\n            media=\"WATCH\"\n            mediaContent={data[\"Popular TV Shows\"]}\n            getOverlayData={getOverlayData}\n            getOverlayServices={getOverlayServices}\n            getWatchScore={getWatchScore}\n            getTVEpScores={getTVEpScores}\n            num=\"3\"\n          />\n          <MediaCategoryList\n            category=\"Top Rated Movies\"\n            media=\"WATCH\"\n            mediaContent={data[\"Top Rated Movies\"]}\n            getOverlayData={getOverlayData}\n            getOverlayServices={getOverlayServices}\n            getWatchScore={getWatchScore}\n            getTVEpScores={getTVEpScores}\n            num=\"4\"\n          />\n          <MediaCategoryList\n            category=\"Popular Movies\"\n            media=\"WATCH\"\n            mediaContent={data[\"Popular Movies\"]}\n            getOverlayData={getOverlayData}\n            getOverlayServices={getOverlayServices}\n            getWatchScore={getWatchScore}\n            getTVEpScores={getTVEpScores}\n            num=\"5\"\n          />\n        </div>\n      );\n    }\n  } else {\n    // TODO: add loading state\n    return (\n      <div className=\"loading-screen\">\n        <div className=\"loading-text\">LOADING WATCH ITEMS...</div>\n        <img src={LoadingSpinner} alt=\"load\" className=\"loader\" />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}