{"ast":null,"code":"import React, { useState, useEffect, useCallback } from \"react\";\nimport { Client } from \"../client\"; // Instantiate a single instance of the Client, used across\n// the application for fetching of data.\n\nconst client = new Client(\"http://127.0.0.1:8000\");\nexport function AppContainer() {\n  const [mediaSelected, setMediaSelected] = useState(\"WATCH\");\n  const [watchData, setWatchData] = useState({});\n  const [listenData, setListenData] = useState({});\n  const getWatchData = useCallback(() => {\n    client.getWatchData().then(data => setWatchData(data));\n  }, [setWatchData]);\n  const getListenData = useCallback(() => {\n    client.getListenData().then(data => setListenData(data));\n  }, [setListenData]);\n  useEffect(() => {\n    if (mediaSelected === \"WATCH\") {\n      getWatchData();\n    } else {\n      getListenData();\n    }\n  }, [mediaSelected, getWatchData, getListenData]);\n  return this.props.children({\n    mediaSelected: mediaSelected,\n    onMediaChange: setMediaSelected,\n    watch: {\n      data: watchData,\n      fetch: getWatchData\n    },\n    listen: {\n      data: listenData,\n      fetch: getListenData\n    }\n  });\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/state/index.js"],"names":["React","useState","useEffect","useCallback","Client","client","AppContainer","mediaSelected","setMediaSelected","watchData","setWatchData","listenData","setListenData","getWatchData","then","data","getListenData","props","children","onMediaChange","watch","fetch","listen"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AAEA,SAASC,MAAT,QAAuB,WAAvB,C,CAEA;AACA;;AACA,MAAMC,MAAM,GAAG,IAAID,MAAJ,CAAW,uBAAX,CAAf;AAEA,OAAO,SAASE,YAAT,GAAwB;AAC7B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,OAAD,CAAlD;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMY,YAAY,GAAGV,WAAW,CAAC,MAAM;AACrCE,IAAAA,MAAM,CAACQ,YAAP,GAAsBC,IAAtB,CAA2BC,IAAI,IAAIL,YAAY,CAACK,IAAD,CAA/C;AACD,GAF+B,EAE7B,CAACL,YAAD,CAF6B,CAAhC;AAIA,QAAMM,aAAa,GAAGb,WAAW,CAAC,MAAM;AACtCE,IAAAA,MAAM,CAACW,aAAP,GAAuBF,IAAvB,CAA4BC,IAAI,IAAIH,aAAa,CAACG,IAAD,CAAjD;AACD,GAFgC,EAE9B,CAACH,aAAD,CAF8B,CAAjC;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,aAAa,KAAK,OAAtB,EAA+B;AAC7BM,MAAAA,YAAY;AACb,KAFD,MAEO;AACLG,MAAAA,aAAa;AACd;AACF,GANQ,EAMN,CAACT,aAAD,EAAgBM,YAAhB,EAA8BG,aAA9B,CANM,CAAT;AAQA,SAAO,KAAKC,KAAL,CAAWC,QAAX,CAAoB;AACzBX,IAAAA,aAAa,EAAEA,aADU;AAEzBY,IAAAA,aAAa,EAAEX,gBAFU;AAGzBY,IAAAA,KAAK,EAAE;AAAEL,MAAAA,IAAI,EAAEN,SAAR;AAAmBY,MAAAA,KAAK,EAAER;AAA1B,KAHkB;AAIzBS,IAAAA,MAAM,EAAE;AAAEP,MAAAA,IAAI,EAAEJ,UAAR;AAAoBU,MAAAA,KAAK,EAAEL;AAA3B;AAJiB,GAApB,CAAP;AAMD","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport { Client } from \"../client\";\n\n// Instantiate a single instance of the Client, used across\n// the application for fetching of data.\nconst client = new Client(\"http://127.0.0.1:8000\");\n\nexport function AppContainer() {\n  const [mediaSelected, setMediaSelected] = useState(\"WATCH\");\n  const [watchData, setWatchData] = useState({});\n  const [listenData, setListenData] = useState({});\n  const getWatchData = useCallback(() => {\n    client.getWatchData().then(data => setWatchData(data));\n  }, [setWatchData]);\n\n  const getListenData = useCallback(() => {\n    client.getListenData().then(data => setListenData(data));\n  }, [setListenData]);\n\n  useEffect(() => {\n    if (mediaSelected === \"WATCH\") {\n      getWatchData();\n    } else {\n      getListenData();\n    }\n  }, [mediaSelected, getWatchData, getListenData]);\n\n  return this.props.children({\n    mediaSelected: mediaSelected,\n    onMediaChange: setMediaSelected,\n    watch: { data: watchData, fetch: getWatchData },\n    listen: { data: listenData, fetch: getListenData }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}