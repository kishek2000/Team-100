{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/Overlay.js\";\nimport React from \"react\";\n\nfunction WatchOverlayMeta({\n  airDate,\n  language,\n  rating,\n  genre\n}) {\n  return [airDate, language, rating, genre].filter(item => !!item).join(\" | \");\n}\n\nfunction ListenOverlayMeta({\n  releaseDate,\n  typeLabel,\n  totalTracks\n}) {\n  if (totalTracks === 1) {\n    typeLabel = \"Single\";\n    totalTracks = null;\n  }\n\n  return [releaseData, typeLabeL, totalTracks].filter(item => !!item).join(\" | \");\n}\n\nexport function Overlay({\n  experience,\n  data,\n  setOpenOverlayID,\n  media_id,\n  setOverlayData\n}) {\n  // const id, media = media_id.split()\n  if (Object.keys(data).length > 0 && media_id !== -1) {\n    const record = data[\"data\"];\n\n    if (Object.keys(record).length > 0 && media_id !== -1) {\n      const media_data = record[0];\n\n      if (experience === \"WATCH\") {\n        return /*#__PURE__*/React.createElement(\"section\", {\n          className: \"overlay\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-poster-wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: media_data[\"imgURL\"],\n          className: \"overlay-poster\",\n          alt: \"media-poster\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-information\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-information-header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }\n        }, media_data[\"name\"]), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"close-text\",\n          onClick: () => {\n            setOpenOverlayID(-1);\n            setOverlayData({});\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }\n        }, \"X\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-genres\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(WatchOverlayMeta, {\n          airDate: media_data[\"first_air_date\"],\n          language: media_data[\"lang\"],\n          rating: media_data[\"content_rating\"],\n          genre: media_data[\"genres\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-description\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-description-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }\n        }, \"Description\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-description-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }\n        }, media_data[\"overview\"])), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-links\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-description-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }\n        }, \"Trailer\"), /*#__PURE__*/React.createElement(\"iframe\", {\n          title: \"trailer\",\n          src: media_data[\"trailer\"],\n          allowfullscreen: \"allowfullscreen\",\n          className: \"overlay-trailer-video\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }\n        })));\n      } else {\n        return /*#__PURE__*/React.createElement(\"section\", {\n          className: \"overlay\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-poster-wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: media_data[\"imgURL\"],\n          className: \"overlay-poster-music\",\n          alt: \"media-poster\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-information\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-information-header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }\n        }, media_data[\"listen_name\"]), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"close-text\",\n          onClick: () => {\n            setOpenOverlayID(-1);\n            setOverlayData({});\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }\n        }, \"X\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-description-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }\n        }, media_data[\"type\"] === \"album\" || media_data[\"type\"] === \"single\" ? media_data[\"artist_name\"] : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-description-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }\n        }, media_data[\"release_date\"], \" |\", \" \", media_data[\"type\"] === \"album\" ? \"Album | \" + String(media_data[\"total_tracks\"]) + \" Tracks\" : \"Single\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-description\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-description-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }\n        }, media_data[\"type\"] === \"podcast\" || media_data[\"type\"] === \"playlist\" ? \"Description\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-description-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }\n        }, media_data[\"type\"] === \"podcast\" || media_data[\"type\"] === \"playlist\" ? media_data[\"description\"] : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-links\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-description-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }\n        }, \"Preview Now\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overlay-description-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }\n        }, \"Spotify:\"), /*#__PURE__*/React.createElement(\"iframe\", {\n          src: media_data[\"listen_link\"].slice(0, 25) + \"embed/\" + media_data[\"listen_link\"].slice(25),\n          className: \"spotify-play\",\n          title: \"play\",\n          frameborder: \"0\",\n          allowtransparency: \"true\",\n          allow: \"encrypted-media\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }\n        })));\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/Overlay.js"],"names":["React","WatchOverlayMeta","airDate","language","rating","genre","filter","item","join","ListenOverlayMeta","releaseDate","typeLabel","totalTracks","releaseData","typeLabeL","Overlay","experience","data","setOpenOverlayID","media_id","setOverlayData","Object","keys","length","record","media_data","String","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction WatchOverlayMeta({ airDate, language, rating, genre }) {\n  return [airDate, language, rating, genre]\n    .filter((item) => !!item)\n    .join(\" | \");\n}\n\nfunction ListenOverlayMeta({ releaseDate, typeLabel, totalTracks }) {\n  if (totalTracks === 1) {\n    typeLabel = \"Single\";\n    totalTracks = null;\n  }\n  return [releaseData, typeLabeL, totalTracks]\n    .filter((item) => !!item)\n    .join(\" | \");\n}\n\nexport function Overlay({\n  experience,\n  data,\n  setOpenOverlayID,\n  media_id,\n  setOverlayData,\n}) {\n  // const id, media = media_id.split()\n  if (Object.keys(data).length > 0 && media_id !== -1) {\n    const record = data[\"data\"];\n    if (Object.keys(record).length > 0 && media_id !== -1) {\n      const media_data = record[0];\n      if (experience === \"WATCH\") {\n        return (\n          <section className=\"overlay\">\n            <div className=\"overlay-poster-wrapper\">\n              <img\n                src={media_data[\"imgURL\"]}\n                className=\"overlay-poster\"\n                alt=\"media-poster\"\n              />\n            </div>\n            <div className=\"overlay-information\">\n              <div className=\"overlay-information-header\">\n                <div className=\"overlay-title\">{media_data[\"name\"]}</div>\n                <div\n                  className=\"close-text\"\n                  onClick={() => {\n                    setOpenOverlayID(-1);\n                    setOverlayData({});\n                  }}\n                >\n                  X\n                </div>\n              </div>\n              <div className=\"overlay-genres\">\n                <WatchOverlayMeta\n                  airDate={media_data[\"first_air_date\"]}\n                  language={media_data[\"lang\"]}\n                  rating={media_data[\"content_rating\"]}\n                  genre={media_data[\"genres\"]}\n                />\n              </div>\n              <div className=\"overlay-description\">\n                <div className=\"overlay-description-title\">Description</div>\n                <div className=\"overlay-description-text\">\n                  {media_data[\"overview\"]}\n                </div>\n              </div>\n              <div className=\"overlay-links\"></div>\n              <div className=\"overlay-description-title\">Trailer</div>\n              <iframe\n                title=\"trailer\"\n                src={media_data[\"trailer\"]}\n                allowfullscreen=\"allowfullscreen\"\n                className=\"overlay-trailer-video\"\n              ></iframe>\n            </div>\n          </section>\n        );\n      } else {\n        return (\n          <section className=\"overlay\">\n            <div className=\"overlay-poster-wrapper\">\n              <img\n                src={media_data[\"imgURL\"]}\n                className=\"overlay-poster-music\"\n                alt=\"media-poster\"\n              />\n            </div>\n            <div className=\"overlay-information\">\n              <div className=\"overlay-information-header\">\n                <div className=\"overlay-title\">{media_data[\"listen_name\"]}</div>\n                <div\n                  className=\"close-text\"\n                  onClick={() => {\n                    setOpenOverlayID(-1);\n                    setOverlayData({});\n                  }}\n                >\n                  X\n                </div>\n              </div>\n              {/* <div className=\"overlay-genres\">{media_data[\"genres\"]}</div> */}\n              <div className=\"overlay-description-title\">\n                {media_data[\"type\"] === \"album\" ||\n                media_data[\"type\"] === \"single\"\n                  ? media_data[\"artist_name\"]\n                  : \"\"}\n              </div>\n              <div className=\"overlay-description-text\">\n                {media_data[\"release_date\"]} |{\" \"}\n                {media_data[\"type\"] === \"album\"\n                  ? \"Album | \" + String(media_data[\"total_tracks\"]) + \" Tracks\"\n                  : \"Single\"}\n              </div>\n              <div className=\"overlay-description\">\n                <div className=\"overlay-description-title\">\n                  {media_data[\"type\"] === \"podcast\" ||\n                  media_data[\"type\"] === \"playlist\"\n                    ? \"Description\"\n                    : \"\"}\n                </div>\n                <div className=\"overlay-description-text\">\n                  {media_data[\"type\"] === \"podcast\" ||\n                  media_data[\"type\"] === \"playlist\"\n                    ? media_data[\"description\"]\n                    : \"\"}\n                </div>\n              </div>\n              <div className=\"overlay-links\"></div>\n              <div className=\"overlay-description-title\">Preview Now</div>\n              <div className=\"overlay-description-text\">Spotify:</div>\n              <iframe\n                src={\n                  media_data[\"listen_link\"].slice(0, 25) +\n                  \"embed/\" +\n                  media_data[\"listen_link\"].slice(25)\n                }\n                className=\"spotify-play\"\n                title=\"play\"\n                frameborder=\"0\"\n                allowtransparency=\"true\"\n                allow=\"encrypted-media\"\n              ></iframe>\n            </div>\n          </section>\n        );\n      }\n    }\n  }\n  return <div></div>;\n}\n"]},"metadata":{},"sourceType":"module"}