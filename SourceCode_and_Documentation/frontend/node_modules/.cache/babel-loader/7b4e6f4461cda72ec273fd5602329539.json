{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { SearchBar } from \"./components/SearchBar\";\nimport { MediaSelector } from \"./components/MediaSelector\";\nimport { OPTIONS, SEARCHTEXT } from \"./components/constants\";\nimport { Experience } from \"./components/Experience\"; // import { TestEndpoint } from \"./TestEndpoint\";\n\nexport function App({\n  watchExperienceData,\n  listenExperienceData\n}) {\n  const [mediaSelected, setMediaSelected] = useState(\"WATCH\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"myLounge-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"myLounge\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"myLounge-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Listen. Watch. Relax.\"), /*#__PURE__*/React.createElement(SearchBar, {\n    name: \"searchbar-menu\",\n    inputname: \"searchinput-menu\",\n    imagename: \"searchbutton-menu\",\n    placeholder: \"Search for Movie, TV Show, Podcast or Music by name...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"App-media-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"selection-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"I want to\"), OPTIONS.map(option => /*#__PURE__*/React.createElement(MediaSelector, {\n    key: option,\n    option: option,\n    isSelected: mediaSelected === option,\n    onClick: option => {\n      setMediaSelected(option);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(SearchBar, {\n    name: \"searchbar\",\n    inputname: \"searchinput\",\n    imagename: \"searchbutton\",\n    placeholder: SEARCHTEXT[mediaSelected],\n    onChange: e => {\n      console.log(\"is this the query\" + this.state.value);\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"media-options-window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Experience, {\n    currentExperience: mediaSelected,\n    watchData: watchExperienceData,\n    listenData: listenExperienceData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/App.js"],"names":["React","useState","SearchBar","MediaSelector","OPTIONS","SEARCHTEXT","Experience","App","watchExperienceData","listenExperienceData","mediaSelected","setMediaSelected","map","option","e","console","log","state","value","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,wBAApC;AACA,SAASC,UAAT,QAA2B,yBAA3B,C,CACA;;AAEA,OAAO,SAASC,GAAT,CAAa;AAAEC,EAAAA,mBAAF;AAAuBC,EAAAA;AAAvB,CAAb,EAA4D;AACjE,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,OAAD,CAAlD;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,eAGE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,gBADP;AAEE,IAAA,SAAS,EAAC,kBAFZ;AAGE,IAAA,SAAS,EAAC,mBAHZ;AAIE,IAAA,WAAW,EAAC,wDAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,eAWE;AAAS,IAAA,SAAS,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGG,OAAO,CAACQ,GAAR,CAAYC,MAAM,iBACjB,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEA,MADP;AAEE,IAAA,MAAM,EAAEA,MAFV;AAGE,IAAA,UAAU,EAAEH,aAAa,KAAKG,MAHhC;AAIE,IAAA,OAAO,EAAEA,MAAM,IAAI;AACjBF,MAAAA,gBAAgB,CAACE,MAAD,CAAhB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CADF,eAcE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,WAAW,EAAER,UAAU,CAACK,aAAD,CAJzB;AAKE,IAAA,QAAQ,EAAEI,CAAC,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsB,KAAKC,KAAL,CAAWC,KAA7C;AACAJ,MAAAA,CAAC,CAACK,cAAF;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF,eA0BE;AAAK,IAAA,EAAE,EAAC,sBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,iBAAiB,EAAET,aADrB;AAEE,IAAA,SAAS,EAAEF,mBAFb;AAGE,IAAA,UAAU,EAAEC,oBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1BF,CAXF,CADF;AAgDD","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport { SearchBar } from \"./components/SearchBar\";\nimport { MediaSelector } from \"./components/MediaSelector\";\nimport { OPTIONS, SEARCHTEXT } from \"./components/constants\";\nimport { Experience } from \"./components/Experience\";\n// import { TestEndpoint } from \"./TestEndpoint\";\n\nexport function App({ watchExperienceData, listenExperienceData }) {\n  const [mediaSelected, setMediaSelected] = useState(\"WATCH\");\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p className=\"myLounge-heading\">myLounge</p>\n        <p className=\"myLounge-subtitle\">Listen. Watch. Relax.</p>\n        <SearchBar\n          name=\"searchbar-menu\"\n          inputname=\"searchinput-menu\"\n          imagename=\"searchbutton-menu\"\n          placeholder=\"Search for Movie, TV Show, Podcast or Music by name...\"\n        />\n      </header>\n      <section className=\"App-media-options\">\n        <div className=\"filters-header\">\n          <div className=\"media-selection\">\n            <p className=\"selection-label\">I want to</p>\n            {OPTIONS.map(option => (\n              <MediaSelector\n                key={option}\n                option={option}\n                isSelected={mediaSelected === option}\n                onClick={option => {\n                  setMediaSelected(option);\n                }}\n              />\n            ))}\n          </div>\n          <SearchBar\n            name=\"searchbar\"\n            inputname=\"searchinput\"\n            imagename=\"searchbutton\"\n            placeholder={SEARCHTEXT[mediaSelected]}\n            onChange={e => {\n              console.log(\"is this the query\" + this.state.value);\n              e.preventDefault();\n            }}\n          />\n        </div>\n        <div id=\"media-options-window\">\n          <Experience\n            currentExperience={mediaSelected}\n            watchData={watchExperienceData}\n            listenData={listenExperienceData}\n          />\n        </div>\n      </section>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}