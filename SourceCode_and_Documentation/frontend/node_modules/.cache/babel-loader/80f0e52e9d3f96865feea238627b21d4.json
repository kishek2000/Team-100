{"ast":null,"code":"var _jsxFileName = \"/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/WatchOverlay.js\";\nimport React from \"react\";\nexport function WatchOverlayMeta({\n  airDate,\n  language,\n  rating,\n  genre\n}) {\n  return [airDate, language, rating, genre].filter(item => !!item).join(\" | \");\n}\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nexport function WatchOverlay({\n  media_data,\n  setOpenOverlayID,\n  setOverlayData\n}) {\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-poster-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: media_data[\"imgURL\"],\n    className: \"overlay-poster\",\n    alt: \"media-poster\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-information-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, media_data[\"name\"]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-text selected\",\n    onClick: () => {\n      delay(2500);\n      setOverlayData({});\n      setOpenOverlayID(-1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-meta-watch-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WatchOverlayMeta, {\n    airDate: media_data[\"first_air_date\"],\n    language: media_data[\"lang\"],\n    rating: media_data[\"content_rating\"],\n    genre: media_data[\"genres\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-watch-description-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, media_data[\"overview\"])), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Trailer\"), /*#__PURE__*/React.createElement(\"iframe\", {\n    title: \"trailer\",\n    src: media_data[\"trailer\"],\n    allowfullscreen: \"allowfullscreen\",\n    className: \"overlay-trailer-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/adikishore/Documents/University/Team-100/SourceCode_and_Documentation/frontend/src/view/WatchOverlay.js"],"names":["React","WatchOverlayMeta","airDate","language","rating","genre","filter","item","join","delay","ms","Promise","resolve","setTimeout","WatchOverlay","media_data","setOpenOverlayID","setOverlayData"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nexport function WatchOverlayMeta({ airDate, language, rating, genre }) {\n  return [airDate, language, rating, genre]\n    .filter((item) => !!item)\n    .join(\" | \");\n}\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nexport function WatchOverlay({ media_data, setOpenOverlayID, setOverlayData }) {\n  return (\n    <section className=\"overlay\">\n      <div className=\"overlay-poster-wrapper\">\n        <img\n          src={media_data[\"imgURL\"]}\n          className=\"overlay-poster\"\n          alt=\"media-poster\"\n        />\n      </div>\n      <div className=\"overlay-information\">\n        <div className=\"overlay-information-header\">\n          <div className=\"overlay-title\">{media_data[\"name\"]}</div>\n          <div\n            className=\"close-text selected\"\n            onClick={() => {\n              delay(2500);\n              setOverlayData({});\n              setOpenOverlayID(-1);\n            }}\n          >\n            X\n          </div>\n        </div>\n        <div className=\"overlay-meta-watch-text\">\n          <WatchOverlayMeta\n            airDate={media_data[\"first_air_date\"]}\n            language={media_data[\"lang\"]}\n            rating={media_data[\"content_rating\"]}\n            genre={media_data[\"genres\"]}\n          />\n        </div>\n        <div className=\"overlay-description\">\n          <div className=\"overlay-subtitle\">Description</div>\n          <div className=\"overlay-watch-description-text\">\n            {media_data[\"overview\"]}\n          </div>\n        </div>\n        <div className=\"overlay-links\"></div>\n        <div className=\"overlay-subtitle\">Trailer</div>\n        <iframe\n          title=\"trailer\"\n          src={media_data[\"trailer\"]}\n          allowfullscreen=\"allowfullscreen\"\n          className=\"overlay-trailer-video\"\n        ></iframe>\n      </div>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}